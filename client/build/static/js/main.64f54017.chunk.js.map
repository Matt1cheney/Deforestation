{"version":3,"sources":["images/Hands.jpeg","images/Tree.jpeg","images/Forest.jpeg","images/City.jpeg","images/Road.jpeg","images/Fbook.svg","images/Email.svg","components/authComponents/userAuth/baseauth.js","components/Navbar/Navbar.js","components/Dashboard/SideMenu/SideMenu.js","components/Dashboard/Regions/RegionCard/RegionCard.js","components/Dashboard/CreateNew/CreateNew.js","components/Dashboard/SearchBar/Search.js","utils/API.js","components/Dashboard/Regions/RegionDisplay/RegionDisplay.js","components/Dashboard/Sites/SiteCard/SiteCard.js","components/Dashboard/Sites/SiteDisplay/SiteDisplay.js","components/Dashboard/Events/EventCard/EventCard.js","components/Dashboard/Events/EventDisplay/EventDisplay.js","components/Dashboard/Seedlings/SourceCard/SourceCard.js","components/Dashboard/Seedlings/SourceDisplay/SourceDisplay.js","components/Dashboard/Persons/PersonCard/Person.js","components/Dashboard/Persons/PersonsDisplay/PersonsDisplay.js","components/Dashboard/Regions/NewRegionForm/RegionForm.js","components/Dashboard/Sites/NewSiteForm/SiteForm.js","components/Dashboard/Persons/NewPerson/NewAdminForm.js","components/Dashboard/Persons/NewPerson/NewUserForm.js","components/Dashboard/Events/NewEvent/NewEventForm.js","components/Dashboard/Seedlings/NewSource/NewSourceForm.js","components/Dashboard/Events/UpdateEventsForm/UpdateEventsForm.js","components/Dashboard/Seedlings/UpdateSourceForm/UpdateSourceForm.js","components/Dashboard/Regions/UpdateRegionForm/updateRegionForm.js","components/Dashboard/Sites/UpdateSiteForm/UpdateSiteForm.js","components/authComponents/Login/Login.js","components/authComponents/userAuth/Auth.js","components/Dashboard/Dashboard.js","components/Home/Cards/Photo.js","components/Home/Cards/InfoCard.js","components/Home/Cards/InfoBlock/InfoBlock.js","components/Footer/Footer.js","components/Header/Header.js","components/Home/Home.js","components/GetInvolved/VolunteerForm/volunteer.js","lib/canvasjs/canvasjs.react.js","lib/canvasjs/ResizeableCanvasJS.js","components/Reforestation/ReforestationMap.js","components/Information/InformationView.js","components/GetInvolved/UserEvents/UserEventCard.js","components/GetInvolved/UserEvents/UserEventDisplay.js","components/GetInvolved/GetInvolved.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","app","firebase","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","NavComp","Navbar","collapseOnSelect","expand","bg","Brand","href","Toggle","aria-controls","Collapse","id","Nav","className","NavDropdown","title","Item","Link","onClick","auth","signOut","SideMenu","DropdownButton","variant","Dropdown","to","pathname","style","width","marginBottom","RegionCard","region","onDelete","this3","_id","coordinator","description","name","coord_name","Card","Body","Row","Col","Title","as","class","height","viewBox","fill","xmlns","d","fill-rule","Button","Subtitle","Text","CreateNew","obj","path","Jumbotron","SearchBar","search","handleInputChange","clearSearch","Form","Group","Label","Control","type","placeholder","onChange","e","target","value","autocomplete","length","size","personData","axios","post","get","uid","delete","regionData","put","siteData","eventData","sourceData","RegionDisplay","setState","loading","document","getElementById","API","then","data","regions","handleSearch","a","state","alert","message","debounce","admin","createObj","this","this4","filter_regions","indexOfDeleteEvent","findIndex","splice","Search","sm","Spinner","animation","role","map","index","key","React","Component","SiteCard","site","profile_image","owner","address","status","plantingTarget","notes","images","latitude","longitude","map_link_url","md","lg","xl","src","rel","street","city","zip","capacity","tree_type","location","number_planted","image","xs","alt","SiteDisplay","sites","filter_sites","indexOfDeleteSite","EventCard","event","onVolunteerDelete","startDate","endDate","volunteers","moment","format","person","s","phone","email","EventDisplay","events","filter_events","filter_volunteers","new_arr","v","updated_events","console","log","SourceCard","source","seedlings","textDecoration","count","target_age","available","intendSite","SourceDisplay","sources","filter_sources","PersonCard","PersonDisplay","persons","filter_person","margin","Person","RegionForm","props","handleChange","handleSelectChange","handleSubmit","preventDefault","history","goBack","coordinators","loader","filter","toLowerCase","coordinators_option","label","onSubmit","controlId","options","rows","marginTop","SiteForm","setFormState","owners","states","File","custom","PersonForm","createUserWithEmailAndPassword","password","firebaseUid","currentUser","catch","err","confirm","Check","inline","UserForm","EventForm","handleSiteChange","handleCoordinatorChange","setStartDate","setEndDate","handleVolunteersChange","result","sites_option","volunteers_option","minHeight","autoComplete","minDate","Date","showYearDropdown","yearDropdownItemNumber","dateFormatCalendar","scrollableYearDropdown","selectsStart","selected","selectsEnd","isMulti","SourceForm","setAvailableDate","date","undefined","push","selected_volunteers_option","defaultValue","UpdateSourceForm","UpdateSiteForm","withRouter","handleLogin","useCallback","elements","signInWithEmailAndPassword","Container","AuthContext","createContext","AuthProvider","children","useState","setCurrentUser","pending","setPending","useEffect","onAuthStateChanged","user","dbUserres","dbUser","Provider","Dashboard","fluid","exact","component","PersonsDisplay","AdminForm","UpdateRegionForm","UpdateAdminForm","UpdateUserForm","UpdateEventForm","Photo","Image","Hands","Tree","Forest","InfoCard","City","Road","InfoBlock","Footer","Fbook","Email","Header","ButtonGroup","split","Menu","Home","Volunteer","fetch","method","body","JSON","stringify","headers","Accept","response","json","resetForm","bind","onNameChange","onPhoneChange","onEmailChange","require","CanvasJS","window","CanvasJSChart","containerProps","position","chartContainerId","_cjsContainerId","chart","Chart","render","onRef","nextProps","nextState","destroy","ResizeableCanvasJS","containerRef","resizeChart","containerWidth","offsetWidth","addEventListener","setTimeout","removeEventListener","aspectRatio","ref","r","defaultProps","ReforestationMap","stateInformation","stateId","MapGeometry","stateName","showStateInformation","stroke","showInLegend","dataPoints","year","y","indexLabelFontColor","indexLabelPlacement","dataSeries","toolTip","content","dataSeriesToCanvasJSColumn","availableDataSeries","treeCoverLoss","co2Emissions","biomassLoss","Modal","show","onHide","closeButton","renderChart","version","Object","keys","renderState","renderStateInformationModal","InformationView","UserEventCard","startTime","endTime","GetInvolved","eventState","setEventState","res","fetchData","App","Login","Boolean","hostname","match","ReactDOM","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.64f54017.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Hands.ecc3272b.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/Tree.c11b7244.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/Forest.4c1deebd.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/City.5f0c4255.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/Road.9856c243.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/Fbook.2e12c0fb.svg\";","module.exports = __webpack_public_path__ + \"static/media/Email.0535036e.svg\";","import * as firebase from \"firebase/app\";\nimport \"firebase/auth\";\n\nconst app = firebase.initializeApp({\n    apiKey: process.env.REACT_APP_FIREBASE_KEY,\n    authDomain:  process.env.REACT_APP_FIREBASE_DOMAIN,\n    databaseURL:  process.env.REACT_APP_FIREBASE_DATABASE,\n    projectId:  process.env.REACT_APP_FIREBASE_PROJECT_ID,\n    storageBucket:  process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n    messagingSenderId:  process.env.REACT_APP_FIREBASE_SENDER_ID\n});\n\nexport default app;","import React from \"react\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport NavDropdown from 'react-bootstrap/NavDropdown';\nimport Nav from \"react-bootstrap/Nav\";\nimport app from \"../authComponents/userAuth/baseauth\";\n// import DropdownButton from \"react-bootstrap/DropdownButton\";\n// import Dropdown from 'react-bootstrap/Dropdown';\n// import SplitButton from 'react-bootstrap/SplitButton';\n// import Nav from 'react-bootstrap/Nav'\n\n\nconst NavComp = () => {\n  return (\n    <>\n      <Navbar collapseOnSelect expand=\"lg\" bg=\"light\" >\n        <Navbar.Brand href=\"/\">ReforestNation</Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n        <Navbar.Collapse id=\"responsive-navbar-nav\">\n          <Nav className=\"mr-auto\">\n            <NavDropdown title=\"Get Involved\" id=\"collasible-nav-dropdown\">\n              <NavDropdown.Item href=\"/volunteer\">Volunteer</NavDropdown.Item>\n              <NavDropdown.Item href=\"#action/3.2\">Seedlings</NavDropdown.Item>\n              <NavDropdown.Item href=\"#action/3.3\">Landowner</NavDropdown.Item>\n            </NavDropdown>\n            <NavDropdown title=\"Get Info\" id=\"collasible-nav-dropdown\">\n              <NavDropdown.Item href=\"#action/3.1\">About Us</NavDropdown.Item>\n              <NavDropdown.Item href=\"/reforestation\">Reforestation</NavDropdown.Item>\n              <NavDropdown.Item href=\"#action/3.3\">Contact</NavDropdown.Item>\n            </NavDropdown>\n          </Nav>\n          <Nav>\n            <Nav.Link href=\"/\" onClick={() => app.auth().signOut()}>Logout</Nav.Link>\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n    </>\n  )\n}\n\nexport default NavComp","import React from \"react\";\nimport \"./style.css\";\nimport DropdownButton from \"react-bootstrap/DropdownButton\";\nimport Dropdown from \"react-bootstrap/Dropdown\";\nimport { Link } from \"react-router-dom\";\n\nconst SideMenu = () => {\n  return (\n    <>\n      <DropdownButton\n        id=\"dropdown-basic-button\"\n        title=\"Menu\"\n        className=\"sideMenuDropdown\"\n        variant=\"dark\"\n      >\n        <Dropdown.Item className=\"sideMenuItems\">\n          <Link to={{ pathname: `/dashboard/regions` }}>Regions</Link>\n        </Dropdown.Item>\n        <Dropdown.Item className=\"sideMenuItems\">\n          <Link to={{ pathname: `/dashboard/sites` }}>Sites</Link>\n        </Dropdown.Item>\n        <Dropdown.Item className=\"sideMenuItems\">\n          <Link to={{ pathname: `/dashboard/events` }}>Events</Link>\n        </Dropdown.Item>\n        <Dropdown.Item className=\"sideMenuItems\">\n          <Link to={{ pathname: `/dashboard/source` }}>Source</Link>\n        </Dropdown.Item>\n        <Dropdown.Item className=\"sideMenuItems\">\n          <Link to={{ pathname: `/dashboard/persons` }}>Persons</Link>\n        </Dropdown.Item>\n      </DropdownButton>\n      <div className=\"sideMenu\">\n        <Link\n          className=\"btn color-white\"\n          variant=\"dark\"\n          style={{ width: \"100%\", marginBottom: 10 }}\n          to={{ pathname: `/dashboard/regions` }}\n        >\n          Regions\n        </Link>\n\n        <Link\n          className=\"btn color-white\"\n          variant=\"dark\"\n          style={{ width: \"100%\", marginBottom: 10 }}\n          to={{ pathname: `/dashboard/sites` }}\n        >\n          Sites\n        </Link>\n\n        <Link\n          className=\"btn color-white\"\n          variant=\"dark\"\n          style={{ width: \"100%\", marginBottom: 10 }}\n          to={{ pathname: `/dashboard/events` }}\n        >\n          Events\n        </Link>\n\n        <Link\n          className=\"btn color-white\"\n          variant=\"dark\"\n          style={{ width: \"100%\", marginBottom: 10 }}\n          to={{ pathname: `/dashboard/source` }}\n        >\n          Source\n        </Link>\n\n        <Link\n          className=\"btn color-white\"\n          variant=\"dark\"\n          style={{ width: \"100%\", marginBottom: 10 }}\n          to={{ pathname: `/dashboard/persons` }}\n        >\n          Persons\n        </Link>\n      </div>\n    </>\n  );\n};\n\nexport default SideMenu;","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Card from \"react-bootstrap/Card\";\nimport Button from \"react-bootstrap/Button\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport \"../style.css\";\n\nconst RegionCard = ({ region, onDelete, this3 }) => {\n  const { _id, coordinator, description, name } = region;\n  const coord_name = coordinator ? coordinator.name : \"\";\n\n  return (\n    <Card className=\"dashboardCard\">\n      <Card.Body>\n        <Row>\n          <Col>\n            <Card.Title>\n              <h3>{name}</h3>\n            </Card.Title>\n          </Col>\n          <Col>\n            <Link\n              as=\"button\"\n              className=\"btn align-right color-white\"\n              to={{\n                pathname: `/dashboard/updateRegion`,\n                region: region\n              }}\n            >\n              <svg class=\"bi bi-pencil-square\" width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n                <path d=\"M15.502 1.94a.5.5 0 0 1 0 .706L14.459 3.69l-2-2L13.502.646a.5.5 0 0 1 .707 0l1.293 1.293zm-1.75 2.456l-2-2L4.939 9.21a.5.5 0 0 0-.121.196l-.805 2.414a.25.25 0 0 0 .316.316l2.414-.805a.5.5 0 0 0 .196-.12l6.813-6.814z\"/>\n                <path fill-rule=\"evenodd\" d=\"M1 13.5A1.5 1.5 0 0 0 2.5 15h11a1.5 1.5 0 0 0 1.5-1.5v-6a.5.5 0 0 0-1 0v6a.5.5 0 0 1-.5.5h-11a.5.5 0 0 1-.5-.5v-11a.5.5 0 0 1 .5-.5H9a.5.5 0 0 0 0-1H2.5A1.5 1.5 0 0 0 1 2.5v11z\"/>\n              </svg>\n            </Link>\n            <Button\n              className=\"btn align-right\"\n              variant=\"dark\"\n              onClick={() => onDelete(_id, this3)}\n            >\n              <svg class=\"bi bi-trash\" width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n                <path d=\"M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z\"/>\n                <path fill-rule=\"evenodd\" d=\"M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4L4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z\"/>\n              </svg>\n            </Button>\n          </Col>\n        </Row>\n        <Card.Subtitle className=\"mb-2 text-muted\">\n          Coordinator: {coord_name}\n        </Card.Subtitle>\n        <Card.Text>{description}</Card.Text>\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default RegionCard;\n","import React from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\nimport Button from \"react-bootstrap/Button\";\n\nconst CreateNew = ({ obj }) => {\n  const { path, name, title } = obj;\n\n  return (\n    <Jumbotron className=\"createNew\">\n      <h1 className=\"m-1\">\n        {title}\n\n        <Link\n          as=\"button\"\n          className=\"btn center float-right color-white\" variant=\"dark\"\n          to={{\n            pathname: path,\n          }}\n        >\n          Add New {name}\n        </Link>\n      </h1>\n    </Jumbotron>\n  );\n};\n\nexport default CreateNew;\n","import React from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport \"./style.css\";\n\nconst SearchBar = ({ search, handleInputChange, clearSearch }) => {\n\n  return (\n\n      <Form className=\"searchBar\">\n        <Form.Group>\n          <Form.Label><h4>Search</h4></Form.Label>\n          <Form.Control\n            id=\"searchInput\"\n            type=\"text\"\n            placeholder=\"Search something...\"\n            onChange={ e => handleInputChange(e.target.value)}\n            name=\"search\"\n            autocomplete=\"off\"\n          />\n        </Form.Group>\n        {search.length > 0 && (\n          <Button\n            className=\"btn\"\n            size=\"lg\"\n            type=\"click\"\n            variant=\"dark\"\n            onClick={clearSearch}\n          >\n            Clear Search\n          </Button>\n        )}\n      </Form>\n\n  )\n\n}\n\nexport default SearchBar","import axios from \"axios\";\r\n\r\n\r\nexport default {\r\n  createPerson: function(personData) {\r\n    return axios.post(\"/api/persons\", personData)\r\n  },\r\n\r\n  getPersons: function() {\r\n    return axios.get(\"/api/persons\")\r\n  },\r\n\r\n  searchPersons: function(search) {\r\n    return axios.get(`/api/matchperson?keyword=${search}`)\r\n  },\r\n\r\n  getPersonById: function(id) {\r\n    return axios.get(`/api/person/${id}`)\r\n  },\r\n\r\n  getPersonByUid: function(uid) {\r\n    return axios.get(`/api/firebaseperson/${uid}`)\r\n  },\r\n\r\n  deletePerson: (id) => {\r\n    return axios.delete(`/api/person/${id}`)\r\n  },\r\n\r\n  updatePerson: (id) => {\r\n    return axios.put(`api/person/${id}`)\r\n  },\r\n\r\n  createRegion: function(regionData) {\r\n    return axios.post(\"/api/regions\", regionData);\r\n  },\r\n\r\n  searchRegions: function(search) {\r\n    return axios.get(`/api/matchregion?keyword=${search}`)\r\n  },\r\n\r\n  getRegions: function() {\r\n    return axios.get(\"/api/regions\")\r\n  },\r\n\r\n  getRegionById: function(id) {\r\n    return axios.get(`/api/region/${id}`)\r\n  },\r\n\r\n  deleteRegion: (id) => {\r\n    return axios.delete(`/api/region/${id}`)\r\n  },\r\n\r\n  updateRegion: function(regionData) {\r\n    return axios.put(`/api/region`, regionData);\r\n  },\r\n\r\n  createSite: function(siteData) {\r\n    return axios.post(\"/api/sites\", siteData)\r\n  },\r\n\r\n  searchSites: function(search) {\r\n    return axios.get(`/api/matchsite?keyword=${search}`)\r\n  },\r\n\r\n  getSites: function() {\r\n    return axios.get(\"/api/sites\")\r\n  },\r\n\r\n  getSiteById: function(id) {\r\n    return axios.get(`/api/site/${id}`)\r\n  },\r\n\r\n  deleteSite: (id) => {\r\n    return axios.delete(`/api/site/${id}`)\r\n  },\r\n\r\n  updateSite: function(siteData) {\r\n    return axios.put(`/api/site`, siteData)\r\n  },\r\n\r\n  createEvent: function(eventData) {\r\n    return axios.post(\"/api/events\", eventData)\r\n  },\r\n\r\n  searchEvents: function(search) {\r\n    return axios.get(`/api/matchevent?keyword=${search}`)\r\n  },\r\n\r\n  getEvents: function() {\r\n    return axios.get(\"/api/events\")\r\n  },\r\n\r\n  getEventById: function(id) {\r\n    return axios.get(`/api/event/${id}`)\r\n  },\r\n\r\n  deleteEvent: (id) => {\r\n    return axios.delete(`/api/event/${id}`)\r\n  },\r\n\r\n  updateEvent: function(eventData) {\r\n    return axios.put(`/api/event`, eventData)\r\n  },\r\n\r\n  createSource: function(sourceData) {\r\n    return axios.post(\"/api/sources\", sourceData)\r\n  },\r\n\r\n  searchSources: function(search) {\r\n    return axios.get(`/api/matchsource?keyword=${search}`)\r\n  },\r\n\r\n  getSources: function() {\r\n    return axios.get(\"/api/sources\")\r\n  },\r\n\r\n  getSourceById: function(id) {\r\n    return axios.get(`/api/source/${id}`)\r\n  },\r\n\r\n  deleteSource: (id) => {\r\n    return axios.delete(`/api/source/${id}`)\r\n  },\r\n\r\n  updateSource: function(sourceData) {\r\n    return axios.put(`/api/source`, sourceData)\r\n  }\r\n}","import React from \"react\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport RegionCard from \"../RegionCard/RegionCard\";\nimport CreateNew from \"../../CreateNew/CreateNew\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport SearchBar from \"../../SearchBar/Search\";\nimport API from \"../../../../utils/API\";\nimport debounce from \"lodash.debounce\";\n\nclass RegionDisplay extends React.Component {\n  constructor() {\n    super();\n    this.admin = true;\n    this.createObj = {\n      name: \"Region\",\n      title: \"Regions\",\n      path: \"/dashboard/newRegion\",\n    };\n    this.state = {\n      search: \"\",\n      regions: [],\n      loading: false,\n    };\n  }\n\n  componentWillMount() {\n    this.setState({ loading: true });\n    API.getRegions().then((data) => {\n      this.setState({ regions: data.data, loading: false });\n    });\n  }\n\n  async onDelete(_id, this4) {\n    try {\n      await API.deleteRegion(_id);\n      let filter_regions = this4.state.regions\n      const indexOfDeleteEvent = filter_regions.findIndex(a => {\n        return a._id === _id\n      })\n      filter_regions.splice(indexOfDeleteEvent, 1)\n      this4.setState({ regions: filter_regions });\n      alert(\"Deleted\");\n    } catch (err) {\n      alert(err.message);\n    }\n  };\n\n  \n  clearSearch = () => {\n    this.setState({ loading: true });\n    document.getElementById(\"searchInput\").value = \"\";\n\n    API.getRegions().then((data) => {\n      this.setState({ regions: data.data, loading: false });\n    });\n\n    this.setState({\n      search: \"\"\n    })\n  }\n\n  handleSearch = async () => {\n\n    try {\n      this.setState({ loading: true });\n      await API.searchRegions(this.state.search).then(data => {\n        this.setState({ regions: data.data, loading: false })\n      });\n    } catch (err) {\n      alert(err.message);\n    }\n  }\n\n\n  handleInputChange = debounce((search) => {\n    this.setState({ search });\n\n    if (this.state.search === \"\") {\n      API.getRegions().then((data) => {\n        this.setState({ regions: data.data, loading: false });\n      });\n      return\n    } else {\n      this.handleSearch()\n    } \n\n  }, 800);\n\n\n\n  render() {\n    return (\n      <>\n        {this.admin && <CreateNew obj={this.createObj} />}\n        <SearchBar\n          search={this.state.search}\n          handleInputChange={this.handleInputChange}\n          clearSearch={this.clearSearch} />\n        {!this.state.loading ? (\n          this.state.regions.length > 0 ? (\n            <Row>\n              {this.state.regions.map((region, index) => (\n                <Col sm={12} key={index}>\n                  <RegionCard region={region} onDelete={this.onDelete} this3={this} />\n                </Col>\n              ))}\n            </Row>\n          ) : (\n              <Row>\n                <Col sm={12}>\n                  <h6 className=\"color-white\">No Record Founds</h6>\n                </Col>\n              </Row>\n            )\n        ) : (\n            <Row>\n              <Col sm={12}>\n                <Spinner animation=\"border\" role=\"status\" variant=\"light\">\n                  <span className=\"sr-only\">Loading...</span>\n                </Spinner>\n              </Col>\n            </Row>\n          )}\n      </>\n    );\n  }\n}\n\nexport default RegionDisplay;\n","import React from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport { Link } from \"react-router-dom\";\nimport Button from \"react-bootstrap/Button\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport \"../style.css\";\n\nconst SiteCard = ({ site, onDelete, this3 }) => {\n  const {\n    _id,\n    profile_image,\n    name,\n    region,\n    coordinator,\n    owner,\n    address,\n    status,\n    plantingTarget,\n    notes,\n    images,\n    latitude,\n    longitude,\n  } = site;\n\n  var map_link_url = `http://www.google.com/maps/place/${latitude},${longitude}`;\n\n  return (\n    <Card className=\"dashboardCard\">\n      <Card.Body>\n        <Row>\n          <Col>\n            <Card.Title>\n              <h3>{name}</h3>\n            </Card.Title>\n          </Col>\n          <Col>\n            <Link\n              as=\"button\"\n              className=\"btn align-right color-white\"\n              to={{\n                pathname: `/dashboard/updateSite`,\n                site: site\n              }}\n            >\n              <svg class=\"bi bi-pencil-square\" width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n                <path d=\"M15.502 1.94a.5.5 0 0 1 0 .706L14.459 3.69l-2-2L13.502.646a.5.5 0 0 1 .707 0l1.293 1.293zm-1.75 2.456l-2-2L4.939 9.21a.5.5 0 0 0-.121.196l-.805 2.414a.25.25 0 0 0 .316.316l2.414-.805a.5.5 0 0 0 .196-.12l6.813-6.814z\"/>\n                <path fill-rule=\"evenodd\" d=\"M1 13.5A1.5 1.5 0 0 0 2.5 15h11a1.5 1.5 0 0 0 1.5-1.5v-6a.5.5 0 0 0-1 0v6a.5.5 0 0 1-.5.5h-11a.5.5 0 0 1-.5-.5v-11a.5.5 0 0 1 .5-.5H9a.5.5 0 0 0 0-1H2.5A1.5 1.5 0 0 0 1 2.5v11z\"/>\n              </svg>\n            </Link>\n            <Button\n              className=\"btn align-right\"\n              variant=\"dark\"\n              onClick={() => onDelete(_id, this3)}\n            >\n              <svg\n                class=\"bi bi-trash\"\n                width=\"1em\"\n                height=\"1em\"\n                viewBox=\"0 0 16 16\"\n                fill=\"currentColor\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n              >\n                <path d=\"M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z\" />\n                <path\n                  fill-rule=\"evenodd\"\n                  d=\"M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4L4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z\"\n                />\n              </svg>\n            </Button>\n          </Col>\n        </Row>\n        <Row>\n          <Col md={2} lg={2} xl={2}>\n            <img src={profile_image}></img>\n          </Col>\n          <Col md={7} lg={8} xl={9}>\n            <Row>\n              <Col sm={12} md={6} lg={4}>\n                <h6>\n                  <b>Region:</b> {region && region.name && region.name}\n                </h6>\n                <h6>\n                  <b>Owner:</b> {owner && owner.name && owner.name}\n                </h6>\n                <h6>\n                  <b>Coordinator:</b> {coordinator.name}\n                </h6>\n                <h6>\n                  <b>location:</b>\n                  <a href={map_link_url} target=\"_blank\" rel=\"noreferrer\">\n                    {latitude}/{longitude}\n                  </a>\n                </h6>\n                <p>\n                  <b>Address:</b> {address.street && address.street} <br></br>\n                  {address.city && address.city}, {address.state && address.state}, {address.zip && address.zip}\n                </p>\n              </Col>\n              <Col sm={12} md={6} lg={4}>\n                <h6>\n                  <b>Status:</b> {status}\n                </h6>\n                <h6>\n                  <b>Capacity: </b>\n                  {plantingTarget.capacity && plantingTarget.capacity}\n                </h6>\n                <h6>\n                  <b>Tree Types: </b>                  \n                  {plantingTarget.tree_type && plantingTarget.tree_type}\n                </h6>\n                <h6>\n                  <b>Location: </b>\n                  {plantingTarget.location && plantingTarget.location}\n                </h6>\n                <h6>\n                  <b>Number Planted: </b>\n                  {plantingTarget.number_planted && plantingTarget.number_planted}\n                </h6>\n              </Col>\n              <Col sm={12} md={12} lg={12}>\n                <p>\n                  <b>Notes:</b> <br></br>\n                  {notes}\n                </p>\n              </Col>\n            </Row>\n          </Col>\n        </Row>\n        <br></br>\n        <Row>\n          <br></br>\n          <br></br>\n          <Col sm={3}>\n            <h4>Images:</h4>\n          </Col>\n        </Row>\n        <Row>\n          {images &&\n            images.map((image, index) => (\n              <Col xs={5} sm={4} lg={3} key={index}>\n                <img src={image} alt=\"\"></img>\n              </Col>\n            ))}\n        </Row>\n        <br></br>\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default SiteCard;","import React from \"react\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport SiteCard from \"../SiteCard/SiteCard\";\nimport CreateNew from \"../../CreateNew/CreateNew\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport API from \"../../../../utils/API\";\nimport SearchBar from \"../../SearchBar/Search\";\nimport debounce from \"lodash.debounce\";\n\nclass SiteDisplay extends React.Component {\n  constructor() {\n    super();\n    this.admin = true;\n    this.coordinator = false;\n    this.createObj = {\n      name: \"Site\",\n      title: \"Sites\",\n      path: \"/dashboard/newSite\",\n    };\n    this.state = {\n      search: \"\",\n      sites: [],\n      loading: false,\n    };\n  }\n\n  componentWillMount() {\n    this.setState({ loading: true });\n    API.getSites().then((data) => {\n      this.setState({sites: data.data});\n      this.setState({ loading: false });\n    });\n  }\n\n  async onDelete(_id, this4) {\n    try {\n      await API.deleteSite(_id);\n      let filter_sites = this4.state.sites\n      const indexOfDeleteSite = filter_sites.findIndex(a => {\n        return a._id === _id\n      })\n      filter_sites.splice(indexOfDeleteSite, 1)\n      this4.setState({ sites: filter_sites });\n      alert(\"Deleted\");\n    } catch (err) {\n      alert(err.message);\n    }\n  };\n\n  clearSearch = () => {\n    this.setState({ loading: true });\n    document.getElementById(\"searchInput\").value = \"\";\n\n    API.getSites().then((data) => {\n      this.setState({ sites: data.data, loading: false });\n    });\n\n    this.setState({\n      search: \"\"\n    })\n  }\n\n  handleSearch = async () => {\n\n    try {\n      this.setState({ loading: true });\n      await API.searchSites(this.state.search).then(data => {\n        this.setState({ sites: data.data, loading: false })\n      });\n    } catch (err) {\n      alert(err.message);\n    }\n  }\n\n\n  handleInputChange = debounce((search) => {\n    this.setState({ search });\n\n    if (this.state.search === \"\") {\n      API.getSites().then((data) => {\n        this.setState({ sites: data.data, loading: false });\n      });\n      return\n    } else {\n      this.handleSearch()\n    } \n\n  }, 800);\n\n  render() {\n    return (\n      <>\n        <CreateNew obj={this.createObj} />\n        <SearchBar\n          search={this.state.search}\n          handleInputChange={this.handleInputChange}\n          clearSearch={this.clearSearch} />\n        {!this.state.loading ? (\n          this.state.sites.length > 0 ? (\n            <Row>\n              {this.state.sites.map((site, index) => (\n                <Col sm={12} key={index}>\n                  <SiteCard site={site} onDelete={this.onDelete} this3={this}/>\n                </Col>\n              ))}\n            </Row>\n          ) : (\n            <Row>\n              <Col sm={12}>\n                <h6 className=\"color-white\">No Record Founds</h6>\n              </Col>\n            </Row>\n          )\n        ) : (\n          <Row>\n            <Col sm={12}>\n              <Spinner animation=\"border\" role=\"status\" variant=\"light\">\n                <span className=\"sr-only\">Loading...</span>\n              </Spinner>\n            </Col>\n          </Row>\n        )}\n      </>\n    );\n  }\n}\n\nexport default SiteDisplay;\n","import React from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport { Link } from \"react-router-dom\";\nimport Button from \"react-bootstrap/Button\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport moment from \"moment\";\nimport \"../style.css\";\n\nconst EventCard = ({ event, onDelete, onVolunteerDelete, this3 }) => {\n  const {\n    _id,\n    site,\n    startDate,\n    endDate,\n    coordinator,\n    description,\n    volunteers,\n  } = event;\n\n  return (\n    <Card className=\"dashboardCard\">\n      <Card.Body>\n        <Row>\n          <Col>\n            <Card.Title>\n              <h3>{site && site.name ? site.name : \"N/A\"}</h3>\n            </Card.Title>\n          </Col>\n          <Col>\n            <Link\n              as=\"button\"\n              className=\"btn align-right color-white\"\n              to={{\n                pathname: `/dashboard/updateEvent`,\n                event: event\n              }}\n            >\n              <svg class=\"bi bi-pencil-square\" width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n                <path d=\"M15.502 1.94a.5.5 0 0 1 0 .706L14.459 3.69l-2-2L13.502.646a.5.5 0 0 1 .707 0l1.293 1.293zm-1.75 2.456l-2-2L4.939 9.21a.5.5 0 0 0-.121.196l-.805 2.414a.25.25 0 0 0 .316.316l2.414-.805a.5.5 0 0 0 .196-.12l6.813-6.814z\"/>\n                <path fill-rule=\"evenodd\" d=\"M1 13.5A1.5 1.5 0 0 0 2.5 15h11a1.5 1.5 0 0 0 1.5-1.5v-6a.5.5 0 0 0-1 0v6a.5.5 0 0 1-.5.5h-11a.5.5 0 0 1-.5-.5v-11a.5.5 0 0 1 .5-.5H9a.5.5 0 0 0 0-1H2.5A1.5 1.5 0 0 0 1 2.5v11z\"/>\n              </svg>\n            </Link>\n            <Button\n              className=\"btn align-right\"\n              variant=\"dark\"\n              onClick={() => onDelete(_id, this3)}\n            >\n              <svg class=\"bi bi-trash\" width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n                <path d=\"M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z\"/>\n                <path fill-rule=\"evenodd\" d=\"M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4L4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z\"/>\n              </svg>\n            </Button>\n          </Col>\n        </Row>\n        <Card.Subtitle className=\"mb-2 text-muted\">\n          {moment(startDate).format(\"MM/DD/YYYY\")} -{\" \"}\n          {moment(endDate).format(\"MM/DD/YYYY\")}\n        </Card.Subtitle>\n        <Card.Subtitle className=\"mb-2 text-muted\">\n          <b>Coordinator: </b> {coordinator ? coordinator.name : \"\"}\n        </Card.Subtitle>\n        {description && (\n          <Card.Text>\n            <b>Description: </b>\n            {description}\n          </Card.Text>\n        )}\n        <Card.Subtitle className=\"mb-2\">\n          <b>Volunteers: </b>\n        </Card.Subtitle>\n        <Row>\n          {volunteers &&\n            volunteers.map((person, index) => (\n              <Col lg={4} s={6} xs={12} key={index}>\n                <Card className=\"volunteerCard\">\n                  <Card.Body>\n                    <h5>{person.name}</h5>\n                    <i className=\"fas fa-phone\"></i>\n                    <span>{`${person.phone}`}</span>\n                    <br></br>\n                    <i className=\"fas fa-envelope-square\"></i>\n                    <span>{`${person.email}`}</span>\n                    <br></br>\n                    <Button \n                      className=\"btn eventBtn\" \n                      size=\"sm\" \n                      variant=\"dark\" \n                      onClick={() => onVolunteerDelete(event, person._id, this3)}>\n                      <svg class=\"bi bi-trash\" width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n                        <path d=\"M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z\"/>\n                        <path fill-rule=\"evenodd\" d=\"M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4L4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z\"/>\n                      </svg>\n                    </Button>\n                  </Card.Body>\n                </Card>\n              </Col>\n            ))}\n        </Row>\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default EventCard;","import React from \"react\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport EventCard from \"../EventCard/EventCard\";\nimport CreateNew from \"../../CreateNew/CreateNew\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport API from \"../../../../utils/API\";\nimport SearchBar from \"../../SearchBar/Search\";\nimport debounce from \"lodash.debounce\";\n\nclass EventDisplay extends React.Component {\n  constructor() {\n    super();\n    this.admin = true;\n    this.coordinator = false;\n    this.createObj = {\n      name: \"Event\",\n      title: \"Events\",\n      path: \"/dashboard/newEvent\",\n    };\n    this.state = {\n      search: \"\",\n      events: [],\n      loading: false,\n    };\n  }\n\n  componentWillMount() {\n    this.setState({ loading: true });\n    API.getEvents().then((data) => {\n      this.setState({ events: data.data, loading: false });\n    });\n  }\n\n  async onDelete(_id, this4) {\n    try {\n      await API.deleteEvent(_id);\n      let filter_events = this4.state.events\n      const indexOfDeleteEvent = filter_events.findIndex(a => {\n        return a._id === _id\n      })\n      filter_events.splice(indexOfDeleteEvent, 1)\n      this4.setState({ events: filter_events });\n      alert(\"Deleted\");\n    } catch (err) {\n      alert(err.message);\n    }\n  };\n\n  async onVolunteerDelete(event, _id, this4) {\n    try {\n      let filter_volunteers = event.volunteers\n      const indexOfDeleteEvent = filter_volunteers.findIndex(a => {\n        return a._id === _id\n      })\n      filter_volunteers.splice(indexOfDeleteEvent, 1)\n\n      let new_arr = filter_volunteers.map((v) => {\n        return v._id;\n      });\n    \n      let eventData = {\n        _id: event._id,\n        site: event.site,\n        coordinator: event.coordinator,\n        description: event.description,\n        startDate: event.startDate,\n        endDate: event.endDate,\n        volunteers: new_arr\n      };\n  \n      try {\n        await API.updateEvent(eventData);\n        alert(\"Volunteer Deleted\");\n        \n        let updated_events = this4.state.events\n        updated_events.volunteers = filter_volunteers\n        this4.setState({ events: updated_events });\n\n      } catch (err) {\n        console.log(err.message);\n      }\n\n    } catch (err) {\n      alert(err.message);\n    }\n  };\n\n  clearSearch = () => {\n    this.setState({ loading: true });\n    document.getElementById(\"searchInput\").value = \"\";\n\n    API.getEvents().then((data) => {\n      this.setState({ events: data.data, loading: false });\n    });\n\n    this.setState({\n      search: \"\"\n    })\n  }\n\n  handleSearch = async () => {\n\n    try {\n      this.setState({ loading: true });\n      await API.searchEvents(this.state.search).then(data => {\n        this.setState({ events: data.data, loading: false })\n      });\n    } catch (err) {\n      alert(err.message);\n    }\n  }\n\n\n  handleInputChange = debounce((search) => {\n    this.setState({ search });\n\n    if (this.state.search === \"\") {\n      API.getEvents().then((data) => {\n        this.setState({ events: data.data, loading: false });\n      });\n      return\n    } else {\n      this.handleSearch()\n    } \n\n  }, 800);\n\n  render() {\n    return (\n      <>\n        {this.admin && <CreateNew obj={this.createObj} />}\n        <SearchBar\n          search={this.state.search}\n          handleInputChange={this.handleInputChange}\n          clearSearch={this.clearSearch} />\n        {!this.state.loading ? (\n          this.state.events.length > 0 ? (\n            <Row>\n              {this.state.events.map((event, index) => (\n                <Col sm={12} key={index}>\n                  <EventCard event={event} onDelete={this.onDelete} onVolunteerDelete={this.onVolunteerDelete} this3={this}/>\n                </Col>\n              ))}\n            </Row>\n          ) : (\n            <Row>\n              <Col sm={12}>\n                <h6 className=\"color-white\">No Record Founds</h6>\n              </Col>\n            </Row>\n          )\n        ) : (\n          <Row>\n            <Col sm={12}>\n              <Spinner animation=\"border\" role=\"status\" variant=\"light\">\n                <span className=\"sr-only\">Loading...</span>\n              </Spinner>\n            </Col>\n          </Row>\n        )}\n      </>\n    );\n  }\n}\n\nexport default EventDisplay;\n\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Form from \"react-bootstrap/Form\";\nimport Card from \"react-bootstrap/Card\";\nimport Button from \"react-bootstrap/Button\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport moment from \"moment\";\nimport \"../style.css\";\n\n\nconst SourceCard = ({ source, onDelete, this3 }) => {\n\n  const { _id, name, owner, address, seedlings, region, coordinator } = source;\n\n  return (\n    <Card className=\"dashboardCard\">\n      <Card.Body>\n        <Row>\n          <Col>\n            <Card.Title><h3>{name}</h3></Card.Title>\n          </Col>\n          <Col>\n            <Link\n              as=\"button\"\n              className=\"btn align-right color-white\"\n              to={{\n                pathname: `/dashboard/updateSource`,\n                source: source\n              }}\n            >\n              <svg class=\"bi bi-pencil-square\" width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n                <path d=\"M15.502 1.94a.5.5 0 0 1 0 .706L14.459 3.69l-2-2L13.502.646a.5.5 0 0 1 .707 0l1.293 1.293zm-1.75 2.456l-2-2L4.939 9.21a.5.5 0 0 0-.121.196l-.805 2.414a.25.25 0 0 0 .316.316l2.414-.805a.5.5 0 0 0 .196-.12l6.813-6.814z\"/>\n                <path fill-rule=\"evenodd\" d=\"M1 13.5A1.5 1.5 0 0 0 2.5 15h11a1.5 1.5 0 0 0 1.5-1.5v-6a.5.5 0 0 0-1 0v6a.5.5 0 0 1-.5.5h-11a.5.5 0 0 1-.5-.5v-11a.5.5 0 0 1 .5-.5H9a.5.5 0 0 0 0-1H2.5A1.5 1.5 0 0 0 1 2.5v11z\"/>\n              </svg>\n            </Link>\n            <Button\n              className=\"btn align-right\"\n              variant=\"dark\"\n              onClick={() => onDelete(_id, this3)}\n            >\n              <svg class=\"bi bi-trash\" width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n                <path d=\"M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z\"/>\n                <path fill-rule=\"evenodd\" d=\"M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4L4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z\"/>\n              </svg>\n            </Button>\n          </Col>\n        </Row>\n        <Row>\n          <Col as={Col} xs={12} md={4}>\n            <Card.Subtitle><b>Owner: </b> {owner && owner.name && owner.name}</Card.Subtitle>\n            <Card.Subtitle><b>Region: </b> {region && region.name && region.name}</Card.Subtitle>\n            <Card.Subtitle><b>Coordinator: </b> {coordinator && coordinator.name && coordinator.name}</Card.Subtitle>\n            <br></br>\n            <Card.Subtitle><b>Address:</b> <br></br> {address.street} <br></br> {address.city}, {address.state} <br></br> {address.zip}</Card.Subtitle>\n          </Col>\n          <Col as={Col} xs={12} md={8}>\n            <Form.Label style={{textDecoration: \"underline\"}}>Seedlings Details:</Form.Label>\n            <Card.Subtitle><b>Tree Types: </b> {seedlings.tree_type}</Card.Subtitle>\n            <Card.Subtitle><b>Count: </b> {seedlings.count}</Card.Subtitle>\n            <Card.Subtitle><b>Target Age: </b> {seedlings.target_age} Year</Card.Subtitle>\n            <Card.Subtitle><b>Available Date: </b> {moment(seedlings.available).format(\"MM/DD/YYYY\")}</Card.Subtitle>\n            <Card.Subtitle><b>Intended Site: </b> {seedlings.intendSite && seedlings.intendSite.name && seedlings.intendSite.name}</Card.Subtitle>\n          </Col>\n        </Row>\n      </Card.Body>\n    </Card>\n  )\n}\n\nexport default SourceCard;","import React from \"react\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport SourceCard from \"../SourceCard/SourceCard\";\nimport CreateNew from \"../../CreateNew/CreateNew\";\nimport API from \"../../../../utils/API\";\nimport SearchBar from \"../../SearchBar/Search\";\nimport debounce from \"lodash.debounce\";\n\n\n\nclass SourceDisplay extends React.Component{\n\n  constructor() {\n    super();\n    this.admin = true;\n    this.coordinator = false;\n    this.createObj = {\n      name: \"Source\",\n      title: \"Sources\",\n      path: \"/dashboard/newSource\"\n    }\n    this.state = {\n      search: \"\",\n      sources: [],\n      loading: false,\n    }\n  }\n\n  componentWillMount() {\n    this.setState({ loading: true });\n    API.getSources().then(data => {\n      this.setState({ sources: data.data, loading: false })\n    })\n  }\n\n  async onDelete(_id, this4) {\n    try {\n      await API.deleteSource(_id);\n      let filter_sources = this4.state.sources\n      const indexOfDeleteEvent = filter_sources.findIndex(a => {\n        return a._id === _id\n      })\n      filter_sources.splice(indexOfDeleteEvent, 1)\n      this4.setState({ sources: filter_sources });\n      alert(\"Deleted\");\n    } catch (err) {\n      alert(err.message);\n    }\n  };\n\n  clearSearch = () => {\n    this.setState({ loading: true });\n    document.getElementById(\"searchInput\").value = \"\";\n\n    API.getSources().then((data) => {\n      this.setState({ sources: data.data, loading: false });\n    });\n\n    this.setState({\n      search: \"\"\n    })\n  }\n\n  handleSearch = async () => {\n\n    try {\n      this.setState({ loading: true });\n      await API.searchSources(this.state.search).then(data => {\n        this.setState({ sources: data.data, loading: false })\n      });\n    } catch (err) {\n      alert(err.message);\n    }\n  }\n\n\n  handleInputChange = debounce((search) => {\n    this.setState({ search });\n\n    if (this.state.search === \"\") {\n      API.getSources().then((data) => {\n        this.setState({ sources: data.data, loading: false });\n      });\n      return\n    } else {\n      this.handleSearch()\n    } \n\n  }, 800);\n\n  render() {\n    return (\n      <>\n      <CreateNew obj={this.createObj}/>\n      <SearchBar\n          search={this.state.search}\n          handleInputChange={this.handleInputChange}\n          clearSearch={this.clearSearch} />\n      {!this.state.loading ? (\n          this.state.sources.length > 0 ? (\n          <Row>\n            {this.state.sources.map((source, index) => (\n              <Col sm={12} key={index}>\n                <SourceCard source={source} onDelete={this.onDelete} this3={this}/>\n              </Col>\n            ))}\n          </Row>\n        ) : (\n            <Row>\n              <Col sm={12}>\n                <h6 className=\"color-white\">No Record Founds</h6>\n              </Col>\n            </Row>\n          )          \n        ) : (\n          <Row>\n            <Col sm={12}>\n              <Spinner animation=\"border\" role=\"status\" variant=\"light\">\n                <span className=\"sr-only\">Loading...</span>\n              </Spinner>\n            </Col>\n          </Row>\n        )}\n      </>\n    )\n  }\n}\n\nexport default SourceDisplay;","import React from \"react\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Col from \"react-bootstrap/Col\";\r\n\r\nconst PersonCard = ({ person, onDelete, this3 }) => {\r\n\r\n  return (\r\n    <Col lg={4} s={6} xs={12}>\r\n      <Card className=\"volunteerCard\">\r\n        <Card.Body>\r\n          <h5>{person.name}</h5>\r\n          <h6>{person.role}</h6>\r\n          <i className=\"fas fa-phone\"></i>\r\n          <span>{`${person.phone}`}</span>\r\n          <br></br>\r\n          <i className=\"fas fa-envelope-square\"></i>\r\n          <span>{`${person.email}`}</span>\r\n          <br></br>\r\n          <Button\r\n            className=\"btn eventBtn\"\r\n            size=\"sm\"\r\n            onClick={() => onDelete(person._id, this3)}\r\n            variant=\"dark\"\r\n          >\r\n            Delete Volunteer\r\n          </Button>\r\n        </Card.Body>\r\n      </Card>\r\n    </Col>\r\n  );\r\n};\r\n\r\nexport default PersonCard;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PersonCard from \"../PersonCard/Person\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\r\nimport Spinner from \"react-bootstrap/Spinner\";\r\nimport API from \"../../../../utils/API\";\r\nimport SearchBar from \"../../SearchBar/Search\";\r\nimport debounce from \"lodash.debounce\";\r\n\r\n\r\nclass PersonDisplay extends React.Component {\r\n\r\n  constructor() {\r\n    super();\r\n    this.admin = true;\r\n    this.persons = []\r\n    this.createObj = {\r\n      name: \"Persons\",\r\n      title: \"Persons\",\r\n      path: \"/dashboard/newPerson\"\r\n    }\r\n    this.state = {\r\n      search: \"\",\r\n      persons: [],\r\n      loading: false,\r\n    }\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.setState({ loading: true });\r\n    API.getPersons().then(data => {\r\n      this.setState({ persons: data.data, loading: false })\r\n    });\r\n  }\r\n\r\n  async onDelete(_id, this4) {\r\n    try {\r\n      await API.deletePerson(_id);\r\n      let filter_person = this4.state.persons\r\n      const indexOfDeleteEvent = filter_person.findIndex(a => {\r\n        return a._id === _id\r\n      })\r\n      filter_person.splice(indexOfDeleteEvent, 1)\r\n      this4.setState({ persons: filter_person });\r\n      alert(\"Deleted\");\r\n    } catch (err) {\r\n      alert(err.message);\r\n    }\r\n  };\r\n\r\n  clearSearch = () => {\r\n    this.setState({ loading: true });\r\n    document.getElementById(\"searchInput\").value = \"\";\r\n\r\n    API.getPersons().then((data) => {\r\n      this.setState({ persons: data.data, loading: false });\r\n    });\r\n\r\n    this.setState({\r\n      search: \"\"\r\n    })\r\n  }\r\n\r\n  handleSearch = async () => {\r\n\r\n    try {\r\n      this.setState({ loading: true });\r\n      await API.searchPersons(this.state.search).then(data => {\r\n        this.setState({ persons: data.data, loading: false })\r\n      });\r\n    } catch (err) {\r\n      alert(err.message);\r\n    }\r\n  }\r\n\r\n\r\n  handleInputChange = debounce((search) => {\r\n    this.setState({ search });\r\n\r\n    if (this.state.search === \"\") {\r\n      API.getPersons().then((data) => {\r\n        this.setState({ persons: data.data, loading: false });\r\n      });\r\n      return\r\n    } else {\r\n      this.handleSearch()\r\n    } \r\n\r\n  }, 800);\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n      <Jumbotron className=\"createNew\">\r\n        <h1 style={{margin: 0}}>People</h1>\r\n        <p>\r\n          <Link\r\n            className=\"btn color-white width-240\"\r\n            variant=\"dark\"\r\n            style={{ width: \"100%\", marginBottom: 10 }}\r\n            to={{ pathname: `/dashboard/newAdmin` }}\r\n          >\r\n            Add New Admin/Coordinator\r\n          </Link>\r\n        </p>\r\n        <p>\r\n          <Link\r\n            className=\"btn color-white width-260\"\r\n            variant=\"dark\"\r\n            style={{ width: \"100%\", marginBottom: 10 }}\r\n            to={{ pathname: `/dashboard/newPerson` }}\r\n          >\r\n            Add New Volunteer/Land Owner\r\n          </Link>\r\n        </p>\r\n      </Jumbotron>\r\n      <SearchBar\r\n          search={this.state.search}\r\n          handleInputChange={this.handleInputChange}\r\n          clearSearch={this.clearSearch} />\r\n      {!this.state.loading ? (\r\n          this.state.persons.length > 0 ? (\r\n            <Row>\r\n              {this.state.persons.map((person, index) => (\r\n                <PersonCard key={index} person={person} onDelete={this.onDelete} this3={this}/>\r\n              ))}\r\n            </Row>\r\n      ) : (\r\n            <Row>\r\n              <Col sm={12}>\r\n                <h6 className=\"color-white\">No Record Founds</h6>\r\n              </Col>\r\n            </Row>\r\n          )\r\n        ) : (\r\n          <Row>\r\n            <Col sm={12}>\r\n              <Spinner animation=\"border\" role=\"status\" variant=\"light\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n              </Spinner>\r\n            </Col>\r\n          </Row>\r\n        )}\r\n    </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default PersonDisplay;","import React from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport API from \"../../../../utils/API\";\nimport Select from \"react-select\";\n\nclass RegionForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.coordinators = [];\n    this.state = {\n      loader: false,\n      name: \"\",\n      coordinator: \"\",\n      description: \"\",\n    };\n  }\n\n  componentWillMount() {\n    this.setState({ loader: true });\n    API.getPersons().then((data) => {\n      this.setState(\n        (this.coordinators = data.data.filter((data) => {\n          return data.role.toLowerCase() === \"coordinator\";\n        }))\n      );\n      this.setState({ loader: false });\n    });\n  }\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  handleSelectChange = (data) => {\n    if (data.value !== \"\") {\n      this.setState({\n        coordinator: data.value,\n      });\n    }\n  };\n\n  handleSubmit = async (event) => {\n    event.preventDefault();\n\n    if (\n      this.state.name === \"\" ||\n      this.state.coordinator === \"\" ||\n      this.state.description === \"\"\n    ) {\n      alert(\"Looks like you forgot one!\");\n      return;\n    }\n\n    try {\n      await API.createRegion(this.state);\n      alert(\"Region Added\");\n      this.props.history.goBack();\n    } catch (err) {\n      console.log(err.message);\n    }\n    \n  };\n\n  render() {\n    let coordinators_option = this.coordinators.map((value) => {\n      return {\n        label: value.name,\n        value: value._id,\n      };\n    });\n\n    return (\n      <div className=\"formContainer\">\n        <Form onSubmit={this.handleSubmit}>\n          <h1>New Region</h1>\n          {!this.state.loader ? (\n            <>\n              <Form.Group controlId=\"formRegion\">\n                <Form.Label>Region Name</Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  placeholder=\"Enter region name\"\n                  name=\"name\"\n                  value={this.state.name}\n                  onChange={this.handleChange}\n                />\n              </Form.Group>\n\n              <Form.Group controlId=\"formCoordinator\">\n                <Form.Label>Coordinator</Form.Label>\n                <Select\n                  name=\"coordinator\"\n                  placeholder=\"Select Coordinator\"\n                  options={coordinators_option}\n                  value={coordinators_option.filter(\n                    ({ value }) => value === this.state.coordinator\n                  )}\n                  onChange={this.handleSelectChange}\n                />\n              </Form.Group>\n\n              <Form.Group controlId=\"formDescription\">\n                <Form.Label>Description</Form.Label>\n                <Form.Control\n                  as=\"textarea\"\n                  rows=\"3\"\n                  placeholder=\"Enter brief description\"\n                  name=\"description\"\n                  value={this.state.description}\n                  onChange={this.handleChange}\n                />\n              </Form.Group>\n\n              <Form.Group\n                controlId=\"formDescription\"\n                style={{ height: 30, marginTop: 22 }}\n              >\n                <Button\n                  variant=\"dark\"\n                  className=\"btn float-right\"\n                  type=\"submit\"\n                >\n                  Submit\n                </Button>\n              </Form.Group>\n            </>\n          ) : (\n            <Row>\n              <Col sm={12} className=\"text-center\">\n                <Spinner animation=\"border\" role=\"status\" variant=\"dark\">\n                  <span className=\"sr-only\">Loading...</span>\n                </Spinner>\n              </Col>\n            </Row>\n          )}\n        </Form>\n      </div>\n    );\n  }\n}\n\nexport default RegionForm;\n","import React from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Spinner from \"react-bootstrap/Spinner\";\r\nimport API from \"../../../../utils/API\";\r\n\r\nclass SiteForm extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.owners = [];\r\n    this.coordinators = [];\r\n    this.persons = [];\r\n    this.regions = [];\r\n    this.states = [\r\n      \"Alabama\",\r\n      \"Alaska\",\r\n      \"Arizona\",\r\n      \"Arkansas\",\r\n      \"California\",\r\n      \"Colorado\",\r\n      \"Connecticut\",\r\n      \"Delaware\",\r\n      \"District of Columbia\",\r\n      \"Florida\",\r\n      \"Georgia\",\r\n      \"Hawaii\",\r\n      \"Idaho\",\r\n      \"Illinois\",\r\n      \"Indiana\",\r\n      \"Iowa\",\r\n      \"Kansas\",\r\n      \"Kentucky\",\r\n      \"Louisiana\",\r\n      \"Maine\",\r\n      \"Maryland\",\r\n      \"Massachusetts\",\r\n      \"Michigan\",\r\n      \"Minnesota\",\r\n      \"Mississippi\",\r\n      \"Missouri\",\r\n      \"Montana\",\r\n      \"Nebraska\",\r\n      \"Nevada\",\r\n      \"New Hampshire\",\r\n      \"New Jersey\",\r\n      \"New Mexico\",\r\n      \"New York\",\r\n      \"North Carolina\",\r\n      \"North Dakota\",\r\n      \"Ohio\",\r\n      \"Oklahoma\",\r\n      \"Oregon\",\r\n      \"Pennsylvania\",\r\n      \"Rhode Island\",\r\n      \"South Carolina\",\r\n      \"South Dakota\",\r\n      \"Tennessee\",\r\n      \"Texas\",\r\n      \"Utah\",\r\n      \"Vermont\",\r\n      \"Virginia\",\r\n      \"Washington\",\r\n      \"West Virginia\",\r\n      \"Wisconsin\",\r\n      \"Wyoming\",\r\n    ];\r\n    this.state = {\r\n      loader: false,\r\n      name: \"\",\r\n      region: null,\r\n      owner: null,\r\n      street: \"\",\r\n      city: \"\",\r\n      state: \"\",\r\n      zip: \"\",\r\n      latitude: \"\",\r\n      longitude: \"\",\r\n      status: \"\",\r\n      coordinator: null,\r\n      capacity: \"\",\r\n      tree_type: \"\",\r\n      location: \"\",\r\n      number_planted: \"\",\r\n      notes: \"\",\r\n    };\r\n  }\r\n\r\n  async componentWillMount() {\r\n    this.setState({ loading: true });\r\n    API.getPersons().then((data) => {\r\n      this.setState(\r\n        (this.coordinators = data.data.filter((data) => {\r\n          return data.role.toLowerCase() === \"coordinator\";\r\n        }))\r\n      );\r\n      this.setState(\r\n        (this.owners = data.data.filter((data) => {\r\n          return data.role.toLowerCase() === \"landowner\";\r\n        }))\r\n      );\r\n      API.getRegions().then((data) => {\r\n        this.setState((this.regions = data.data));\r\n        this.setState({ loading: false });\r\n      });\r\n    });\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n\r\n    if (value === \"none\") {\r\n      this.setFormState({\r\n        [name]: null,\r\n      });\r\n      return;\r\n    }\r\n\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    if (\r\n      this.state.street === \"\" ||\r\n      this.state.city === \"\" ||\r\n      this.state.state === \"\" ||\r\n      this.state.zip === \"\" ||\r\n      this.state.latitude === \"\" ||\r\n      this.state.longitude === \"\" ||\r\n      this.state.region === null ||\r\n      this.state.coordinator === null ||\r\n      this.state.name === \"\" ||\r\n      this.state.capacity === \"\" || \r\n      this.state.tree_type === \"\" || \r\n      this.state.location === \"\" || \r\n      this.state.number_planted === \"\"\r\n    ) {\r\n      alert(\"Looks like you forgot one!\");\r\n      return;\r\n    }\r\n\r\n    let siteData = {\r\n      name: this.state.name,\r\n      region: this.state.region,\r\n      owner: this.state.owner,\r\n      address: {\r\n        street: this.state.street,\r\n        city: this.state.city,\r\n        state: this.state.state,\r\n        zip: this.state.zip,\r\n      },\r\n      status: this.state.status,\r\n      latitude: this.state.latitude,\r\n      longitude: this.state.longitude,\r\n      coordinator: this.state.coordinator,\r\n      plantingTarget: {\r\n        capacity: this.state.capacity,\r\n        tree_type: this.state.tree_type,\r\n        location: this.state.location,\r\n        number_planted: this.state.number_planted,\r\n      },\r\n      notes: this.state.notes\r\n    };\r\n\r\n    try {\r\n      await API.createSite(siteData);\r\n      alert(\"Site Added\");\r\n      this.props.history.goBack();\r\n    } catch (err) {\r\n      alert(err.message);\r\n    }\r\n    \r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Form className=\"formContainer\" onSubmit={this.handleSubmit}>\r\n        <h1>New Site</h1>\r\n        {!this.state.loading ? (\r\n          <>\r\n            <Form.Row>\r\n              <Form.Group as={Col} xs={12} md={4} controlId=\"formSiteName\">\r\n                <Form.Label>Site Name</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"\"\r\n                  name=\"name\"\r\n                  onChange={this.handleChange}\r\n                  value={this.state.name}\r\n                />\r\n              </Form.Group>\r\n\r\n              <Form.Group as={Col} xs={12} md={4} controlId=\"formRegion\">\r\n                <Form.Label>Region</Form.Label>\r\n                <Form.Control\r\n                  as=\"select\"\r\n                  name=\"region\"\r\n                  onChange={this.handleChange}\r\n                >\r\n                  <option>none</option>\r\n                  {this.regions.map((region, index) => (\r\n                    <option key={index} value={region._id}>\r\n                      {region.name}\r\n                    </option>\r\n                  ))}\r\n                </Form.Control>\r\n              </Form.Group>\r\n              <Form.Group as={Col} xs={12} md={4} controlId=\"formSiteOwner\">\r\n                <Form.Label>Owner</Form.Label>\r\n                <Form.Control\r\n                  as=\"select\"\r\n                  name=\"owner\"\r\n                  onChange={this.handleChange}\r\n                >\r\n                  <option>none</option>\r\n                  {this.owners.map((owner, index) => (\r\n                    <option key={index} value={owner._id}>\r\n                      {owner.name}\r\n                    </option>\r\n                  ))}\r\n                </Form.Control>\r\n              </Form.Group>\r\n            </Form.Row>\r\n\r\n            <Form.Row>\r\n              <Form.Group as={Col} xs={12} md={4} controlId=\"formGridAddress1\">\r\n                <Form.Label>Address</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"1234 Main St\"\r\n                  name=\"street\"\r\n                  onChange={this.handleChange}\r\n                  value={this.state.street}\r\n                />\r\n              </Form.Group>\r\n\r\n              <Form.Group as={Col} xs={12} md={3} controlId=\"formGridCity\">\r\n                <Form.Label>City</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  name=\"city\"\r\n                  onChange={this.handleChange}\r\n                  value={this.state.city}\r\n                />\r\n              </Form.Group>\r\n\r\n              <Form.Group as={Col} xs={12} md={3} controlId=\"formGridState\">\r\n                <Form.Label>State</Form.Label>\r\n                <Form.Control\r\n                  as=\"select\"\r\n                  name=\"state\"\r\n                  onChange={this.handleChange}\r\n                >\r\n                  <option>select</option>\r\n                  {this.states.map((state, index) => (\r\n                    <option key={index}>{state}</option>\r\n                  ))}\r\n                </Form.Control>\r\n              </Form.Group>\r\n\r\n              <Form.Group as={Col} xs={12} md={2} controlId=\"formGridZip\">\r\n                <Form.Label>Zip</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  name=\"zip\"\r\n                  onChange={this.handleChange}\r\n                  value={this.state.zip}\r\n                />\r\n              </Form.Group>\r\n            </Form.Row>\r\n\r\n            <Form.Row>              \r\n              <Form.Group as={Col} xs={12} md={12} controlId=\"formMainText\" style={{margin: 0}}>\r\n                <Form.Label style={{textDecoration: \"underline\"}}>Planting Target:</Form.Label>\r\n              </Form.Group>\r\n\r\n              <Form.Group as={Col} xs={12} md={3} controlId=\"formGridCity\">\r\n                <Form.Label>Capacity</Form.Label>\r\n                <Form.Control\r\n                  type=\"number\"\r\n                  name=\"capacity\"\r\n                  onChange={this.handleChange}\r\n                  value={this.state.capacity}\r\n                />\r\n              </Form.Group>\r\n              \r\n              <Form.Group as={Col} xs={12} md={3} controlId=\"formGridCity\">\r\n                <Form.Label>Tree Type</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  name=\"tree_type\"\r\n                  onChange={this.handleChange}\r\n                  value={this.state.tree_type}\r\n                />\r\n                <small>Please use comma(,) to sepereate type</small>\r\n              </Form.Group>\r\n              \r\n              <Form.Group as={Col} xs={12} md={3} controlId=\"formGridCity\">\r\n                <Form.Label>Location</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  name=\"location\"\r\n                  onChange={this.handleChange}\r\n                  value={this.state.location}\r\n                />\r\n              </Form.Group>\r\n              \r\n              <Form.Group as={Col} xs={12} md={3} controlId=\"formGridCity\">\r\n                <Form.Label>Number Planted</Form.Label>\r\n                <Form.Control\r\n                  type=\"number\"\r\n                  name=\"number_planted\"\r\n                  onChange={this.handleChange}\r\n                  value={this.state.number_planted}\r\n                />\r\n              </Form.Group>              \r\n            </Form.Row>\r\n\r\n            <Form.Row>\r\n              <Form.Group as={Col} xs={12} md={3} controlId=\"formGridCity\">\r\n                <Form.Label>Latitude</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  name=\"latitude\"\r\n                  onChange={this.handleChange}\r\n                  value={this.state.latitude}\r\n                />\r\n              </Form.Group>\r\n\r\n              <Form.Group as={Col} xs={12} md={3} controlId=\"formGridZip\">\r\n                <Form.Label>longitude</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  name=\"longitude\"\r\n                  onChange={this.handleChange}\r\n                  value={this.state.longitude}\r\n                />\r\n              </Form.Group>\r\n\r\n              <Form.Group as={Col} xs={12} md={3} controlId=\"formStatus\">\r\n                <Form.Label>Status</Form.Label>\r\n                <Form.Control\r\n                  as=\"select\"\r\n                  name=\"status\"\r\n                  onChange={this.handleChange}\r\n                >\r\n                  <option>none</option>\r\n                  <option>Pending</option>\r\n                  <option>Active</option>\r\n                  <option>Inactive</option>\r\n                </Form.Control>\r\n              </Form.Group>\r\n\r\n              <Form.Group as={Col} xs={12} md={3} controlId=\"formCoordinator\">\r\n                <Form.Label>Coordinator</Form.Label>\r\n                <Form.Control\r\n                  as=\"select\"\r\n                  name=\"coordinator\"\r\n                  onChange={this.handleChange}\r\n                >\r\n                  <option>none</option>\r\n                  {this.coordinators.map((person, index) => (\r\n                    <option key={index} value={person._id}>\r\n                      {person.name}\r\n                    </option>\r\n                  ))}\r\n                </Form.Control>\r\n              </Form.Group>\r\n            </Form.Row>\r\n\r\n            <Form.Row>\r\n              <Form.Group as={Col} xs={12} md={12} controlId=\"formGridZip\">\r\n                <Form.Label>Notes</Form.Label>\r\n                <Form.Control\r\n                  as=\"textarea\"\r\n                  rows=\"3\"\r\n                  name=\"notes\"\r\n                  onChange={this.handleChange}\r\n                  value={this.state.notes}\r\n                />\r\n              </Form.Group>\r\n            </Form.Row>\r\n\r\n            <Form.Group>\r\n              <Form.File\r\n                id=\"profileImageSiteForm\"\r\n                label=\"Profile Image\"\r\n                custom\r\n                name=\"\"\r\n              />\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.File\r\n                id=\"contractSiteForm\"\r\n                label=\"Contract\"\r\n                custom\r\n                name=\"\"\r\n              />\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.File\r\n                id=\"imagesSiteForm\"\r\n                label=\"Additional Images\"\r\n                custom\r\n                name=\"\"\r\n              />\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.File\r\n                id=\"documentsSiteForm\"\r\n                label=\"Addition Documents\"\r\n                custom\r\n                name=\"\"\r\n              />\r\n            </Form.Group>\r\n\r\n            <Form.Group\r\n              controlId=\"formDescription\"\r\n              style={{ height: 30, marginTop: 22 }}\r\n            >\r\n              <Button\r\n                variant=\"primary\"\r\n                className=\"btn float-right\"\r\n                type=\"submit\"\r\n              >\r\n                Submit\r\n              </Button>\r\n            </Form.Group>\r\n          </>\r\n        ) : (\r\n          <Row>\r\n            <Col sm={12} className=\"text-center\">\r\n              <Spinner animation=\"border\" role=\"status\" variant=\"dark\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n              </Spinner>\r\n            </Col>\r\n          </Row>\r\n        )}\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SiteForm;\r\n","import React from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport API from \"../../../../utils/API\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport app from \"../../../authComponents/userAuth/baseauth\";\n\nclass PersonForm extends React.Component {\n  // const availableRegions = regions.filter((data) => {\n  //   return data.coordinator === null;\n  // })\n  constructor(props) {\n    super(props);\n    this.regions = [];\n    this.state = {\n      region: null,\n      name: \"\",\n      email: \"\",\n      firebaseUid: \"\",\n      phone: \"\",\n      role: \"\",\n      password: \"\",\n    };\n  }\n\n  componentWillMount() {\n    API.getRegions().then((data) => this.setState((this.regions = data.data)));\n  }\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n\n    if (value === \"none\") {\n      this.setState({\n        name: null,\n      });\n      return;\n    }\n\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  handleSubmit = async (event) => {\n    event.preventDefault();\n\n    if (this.state.name === \"\" || this.state.email === \"\") {\n      alert(\"Looks like you forgot one!\");\n      return;\n    }\n    try {\n      await app\n        .auth()\n        .createUserWithEmailAndPassword(this.state.email, this.state.password);\n      // await this.setState({ firebaseuid: app.auth().currentUser.uid});\n    } catch (error) {\n      alert(error);\n    } finally {\n      this.setState({ firebaseUid: app.auth().currentUser.uid });\n    }\n\n    API.createPerson(this.state)\n      .then(() => alert(\"Admin Created\"))\n      .catch((err) => alert(err.message));\n\n    this.setState({\n      region: null,\n      name: \"\",\n      email: \"\",\n      firebaseUid: \"\",\n      phone: \"\",\n      role: \"\",\n      password: \"\",\n    });\n  };\n\n  render() {\n    return (\n      <>\n        <Form\n          className=\"formContainer\"\n          // temporarily removed && this.handleSignUp from the onSubmit\n          onSubmit={this.handleSubmit}\n        >\n          <h1>New Admin or Coordinator</h1>\n          <Form.Row>\n            <Form.Group as={Col} controlId=\"formName\">\n              <Form.Label>Full Name</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"\"\n                name=\"name\"\n                value={this.state.name}\n                onChange={this.handleChange}\n              />\n            </Form.Group>\n          </Form.Row>\n\n          <Form.Row>\n            <Form.Group as={Col} controlId=\"formPhone\">\n              <Form.Label>Phone</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"\"\n                name=\"phone\"\n                value={this.state.phone}\n                onChange={this.handleChange}\n              />\n            </Form.Group>\n\n            <Form.Group as={Col} controlId=\"formEmail\">\n              <Form.Label>Email</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"\"\n                name=\"email\"\n                value={this.state.email}\n                onChange={this.handleChange}\n              />\n            </Form.Group>\n          </Form.Row>\n\n          <Form.Row>\n            <Form.Group as={Col} controlId=\"formPassword\">\n              <Form.Label>Password</Form.Label>\n              <Form.Control\n                name=\"password\"\n                value={this.state.password}\n                onChange={this.handleChange}\n              />\n            </Form.Group>\n\n            <Form.Group as={Col} controlId=\"formConfirm\">\n              <Form.Label>Confirm Password</Form.Label>\n              <Form.Control\n                name=\"confirm\"\n                value={this.state.confirm}\n                onChange={this.handleChange}\n              />\n            </Form.Group>\n          </Form.Row>\n          <Form.Group controlId=\"exampleForm.SelectCustom\">\n            <Form.Label>Region</Form.Label>\n            <Form.Control\n              as=\"select\"\n              onChange={this.handleChange}\n              name=\"region\"\n              custom\n            >\n              <option>none</option>\n              {this.regions.map((region, index) => (\n                <option key={index} value={region._id}>\n                  {region.name}\n                </option>\n              ))}\n            </Form.Control>\n          </Form.Group>\n          <Form.Group>\n            {[\"radio\"].map((type) => (\n              <div key={`inline-${type}`} className=\"mb-3\" value>\n                <Form.Check\n                  inline\n                  label=\"Coordinator\"\n                  type={type}\n                  id={`inline-${type}-Coordinator`}\n                  name=\"role\"\n                  value=\"Coordinator\"\n                  onChange={this.handleChange}\n                />\n                <Form.Check\n                  inline\n                  label=\"Admin\"\n                  type={type}\n                  id={`inline-${type}-Admin`}\n                  name=\"role\"\n                  value=\"Admin\"\n                  onChange={this.handleChange}\n                />\n              </div>\n            ))}\n          </Form.Group>\n\n          <Form.Group\n            controlId=\"formDescription\"\n            style={{ height: 30, marginTop: 22 }}\n          >\n            <Button variant=\"primary\" className=\"btn float-right\" type=\"submit\">\n              Submit\n            </Button>\n          </Form.Group>\n        </Form>\n      </>\n    );\n  }\n}\n\nexport default PersonForm;\n","import React from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport API from \"../../../../utils/API\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Spinner from \"react-bootstrap/Spinner\";\r\n\r\nclass UserForm extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      regions: [],\r\n      loading: false,\r\n      region: null,\r\n      name: \"\",\r\n      email: \"\",\r\n      phone: \"\",\r\n      role: \"\",\r\n    };\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.setState({ loading: true });\r\n    API.getRegions().then((data) => {\r\n      this.setState({ regions: data.data, loading: false });\r\n    });\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n\r\n    if (value === \"none\") {\r\n      this.setState({\r\n        [name]: null,\r\n      });\r\n      return;\r\n    }\r\n\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    if (this.state.name === \"\" || this.state.email === \"\") {\r\n      alert(\"Looks like you forgot one!\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      await API.createPerson(this.state);\r\n\r\n      if(this.state.role === \"Volunteer\") {\r\n        alert(\"Volunteer Created\");\r\n      } else {\r\n        alert(\"Land Owner Created\");\r\n      } \r\n      \r\n      this.props.history.goBack();\r\n    } catch (err) {\r\n      console.log(err.message);\r\n    }\r\n\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Form className=\"formContainer\" onSubmit={this.handleSubmit}>\r\n        <h1>Add New Volunteer/Land Owner</h1>\r\n        {!this.state.loading ? (\r\n          <div>\r\n            <Form.Row>\r\n              <Form.Group as={Col} controlId=\"formName\">\r\n                <Form.Label>Full Name</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"\"\r\n                  name=\"name\"\r\n                  value={this.state.name}\r\n                  onChange={this.handleChange}\r\n                />\r\n              </Form.Group>\r\n            </Form.Row>\r\n\r\n            <Form.Row>\r\n              <Form.Group as={Col} controlId=\"formPhone\">\r\n                <Form.Label>Phone</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"\"\r\n                  name=\"phone\"\r\n                  value={this.state.phone}\r\n                  onChange={this.handleChange}\r\n                />\r\n              </Form.Group>\r\n\r\n              <Form.Group as={Col} controlId=\"formEmail\">\r\n                <Form.Label>Email</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"\"\r\n                  name=\"email\"\r\n                  value={this.state.email}\r\n                  onChange={this.handleChange}\r\n                />\r\n              </Form.Group>\r\n            </Form.Row>\r\n\r\n            <Form.Group controlId=\"exampleForm.SelectCustom\">\r\n              <Form.Label>Region</Form.Label>\r\n              <Form.Control\r\n                as=\"select\"\r\n                onChange={this.handleChange}\r\n                name=\"region\"\r\n              >\r\n                <option>none</option>\r\n                {this.state.regions.map((region, index) => (\r\n                  <option key={index} value={region._id}>\r\n                    {region.name}\r\n                  </option>\r\n                ))}\r\n              </Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group>\r\n              <Form.Label>Person Type</Form.Label>\r\n              {[\"radio\"].map((type) => (\r\n                <div key={`inline-${type}`} className=\"mb-3\" value>\r\n                  <Form.Check\r\n                    inline\r\n                    label=\"Land Owner\"\r\n                    type={type}\r\n                    id={`inline-${type}-Admin`}\r\n                    name=\"role\"\r\n                    value=\"LandOwner\"\r\n                    onChange={this.handleChange}\r\n                  />\r\n                  <Form.Check\r\n                    inline\r\n                    label=\"Volunteer\"\r\n                    type={type}\r\n                    id={`inline-${type}-Admin`}\r\n                    name=\"role\"\r\n                    value=\"Volunteer\"\r\n                    onChange={this.handleChange}\r\n                  />\r\n                </div>\r\n              ))}\r\n            </Form.Group>\r\n\r\n            <Form.Group\r\n              controlId=\"formDescription\"\r\n              style={{ height: 30, marginTop: 22 }}\r\n            >\r\n              <Button\r\n                variant=\"primary\"\r\n                className=\"btn float-right\"\r\n                type=\"submit\"\r\n              >\r\n                Submit\r\n              </Button>\r\n            </Form.Group>\r\n          </div>\r\n        ) : (\r\n          <Row>\r\n            <Col sm={12} className=\"text-center\">\r\n              <Spinner animation=\"border\" role=\"status\" variant=\"dark\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n              </Spinner>\r\n            </Col>\r\n          </Row>\r\n        )}\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UserForm;\r\n","import React from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport API from \"../../../../utils/API\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Select from \"react-select\";\r\nimport Spinner from \"react-bootstrap/Spinner\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nclass EventForm extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.coordinators = [];\r\n    this.persons = [];\r\n    this.state = {\r\n      loader: false,\r\n      persons: [],\r\n      sites: [],\r\n      site: null,\r\n      coordinator: null,\r\n      description: \"\",\r\n      startDate: null,\r\n      endDate: null,\r\n      volunteers: []\r\n    };\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.setState({ loader: true });\r\n    API.getPersons().then((result) => {\r\n      this.setState({\r\n        persons: result.data,\r\n        coordinators: result.data.filter((data) => {\r\n          return data.role.toLowerCase() === \"coordinator\";\r\n        }),\r\n      });\r\n\r\n      API.getSites().then((result) => {\r\n        this.setState({ sites: result.data });\r\n\r\n        API.getPersons().then((result) => {\r\n          this.setState({ persons: result.data });\r\n          this.setState({ loader: false });\r\n        });\r\n      });\r\n    });\r\n  }\r\n\r\n  handleSiteChange = (data) => {\r\n    if (data.value !== \"\") {\r\n      this.setState({\r\n        site: data.value,\r\n      });\r\n    }\r\n  };\r\n\r\n  handleCoordinatorChange = (data) => {\r\n    if (data.value !== \"\") {\r\n      this.setState({\r\n        coordinator: data.value,\r\n      });\r\n    }\r\n  };\r\n\r\n  handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n\r\n    if (value === \"none\") {\r\n      this.setState({\r\n        [name]: null,\r\n      });\r\n      return;\r\n    }\r\n\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    if (this.state.site === null || this.state.coordinator === null || this.state.coordinator === null) {\r\n      alert(\"Looks like you forgot one!\");\r\n      return;\r\n    }\r\n\r\n    let eventData = {\r\n      site: this.state.site,\r\n      coordinator: this.state.coordinator,\r\n      description: this.state.description,\r\n      startDate: this.state.startDate,\r\n      endDate: this.state.endDate,\r\n      volunteers: this.state.volunteers\r\n    };\r\n\r\n    try {\r\n      await API.createEvent(eventData);\r\n      alert(\"Event Added\");\r\n      this.props.history.goBack();\r\n    } catch (err) {\r\n      console.log(err.message);\r\n    }\r\n    \r\n  };\r\n\r\n  setStartDate = (event) => {\r\n    this.setState({ startDate: event });\r\n  };\r\n\r\n  setEndDate = (event) => {\r\n    this.setState({ endDate: event });\r\n  };\r\n\r\n  handleVolunteersChange = (event) => {\r\n\r\n    let new_arr = event.map((v) => {\r\n      return v.value;\r\n    });\r\n\r\n    this.setState({ volunteers: new_arr });\r\n\r\n    console.log(new_arr)\r\n  }\r\n\r\n  render() {\r\n    let sites_option = this.state.sites.map((value) => {\r\n      return {\r\n        label: value.name,\r\n        value: value._id,\r\n      };\r\n    });\r\n\r\n    let coordinators = this.state.persons.filter((data) => {\r\n      return data.role.toLowerCase() === \"coordinator\";\r\n    });\r\n\r\n    let coordinators_option = coordinators.map((value) => {\r\n      return {\r\n        label: value.name,\r\n        value: value._id,\r\n      };\r\n    });\r\n\r\n    let volunteers = this.state.persons.filter((data) => {\r\n      return data.role.toLowerCase() === \"volunteer\";\r\n    });\r\n\r\n    let volunteers_option = volunteers.map((value) => {\r\n      return {\r\n        label: value.name,\r\n        value: value._id,\r\n      };\r\n    });\r\n\r\n    return (\r\n      <Form\r\n        className=\"formContainer\"\r\n        onSubmit={this.handleSubmit}\r\n        style={{ minHeight: 505 }}\r\n      >\r\n        <h1>New Event</h1>\r\n        {!this.state.loader ? (\r\n          <div>\r\n            <Form.Row>\r\n              <Form.Group as={Col} xs={12} md={6} controlId=\"formSite\">\r\n                <Form.Label>Site</Form.Label>\r\n                <Select\r\n                  name=\"site\"\r\n                  placeholder=\"Select Site\"\r\n                  options={sites_option}\r\n                  value={sites_option.filter(\r\n                    ({ value }) => value === this.state.site\r\n                  )}\r\n                  onChange={this.handleSiteChange}\r\n                />\r\n              </Form.Group>\r\n\r\n              <Form.Group as={Col} xs={12} md={6} controlId=\"formCoordinator\">\r\n                <Form.Label>Coordinator</Form.Label>\r\n                <Select\r\n                  name=\"coordinator\"\r\n                  placeholder=\"Select Coordinator\"\r\n                  options={coordinators_option}\r\n                  value={coordinators_option.filter(\r\n                    ({ value }) => value === this.state.coordinator\r\n                  )}\r\n                  onChange={this.handleCoordinatorChange}\r\n                />\r\n              </Form.Group>\r\n            </Form.Row>\r\n\r\n            <Form.Row>\r\n              <Form.Group as={Col} controlId=\"formDate\">\r\n                <Form.Label>Start Date</Form.Label>\r\n                <DatePicker\r\n                  autoComplete={false}\r\n                  className=\"form-control\"\r\n                  placeholder=\"MM/DD/YYYY\"\r\n                  onChange={this.setStartDate}\r\n                  minDate={new Date()}\r\n                  showYearDropdown\r\n                  yearDropdownItemNumber={5}\r\n                  dateFormatCalendar=\"MMMM\"\r\n                  scrollableYearDropdown\r\n                  selectsStart\r\n                  selected={\r\n                    this.state.startDate ? new Date(this.state.startDate) : \"\"\r\n                  }\r\n                  startDate={\r\n                    this.state.startDate ? new Date(this.state.startDate) : \"\"\r\n                  }\r\n                  endDate={\r\n                    this.state.endDate ? new Date(this.state.endDate) : \"\"\r\n                  }\r\n                  name=\"startDate\"\r\n                />\r\n              </Form.Group>\r\n\r\n              <Form.Group as={Col} controlId=\"formEndTime\">\r\n                <Form.Label>End Date</Form.Label>\r\n                <DatePicker\r\n                  className=\"form-control\"\r\n                  placeholder=\"MM/DD/YYYY\"\r\n                  onChange={this.setEndDate}\r\n                  minDate={\r\n                    new Date(this.state.startDate) > new Date()\r\n                      ? new Date(this.state.startDate)\r\n                      : new Date()\r\n                  }\r\n                  showYearDropdown\r\n                  yearDropdownItemNumber={5}\r\n                  dateFormatCalendar=\"MMMM\"\r\n                  scrollableYearDropdown\r\n                  selectsEnd\r\n                  selected={\r\n                    this.state.endDate ? new Date(this.state.endDate) : \"\"\r\n                  }\r\n                  startDate={\r\n                    this.state.startDate ? new Date(this.state.startDate) : \"\"\r\n                  }\r\n                  endDate={\r\n                    this.state.endDate ? new Date(this.state.endDate) : \"\"\r\n                  }\r\n                  name=\"endDate\"\r\n                />\r\n              </Form.Group>\r\n            </Form.Row>\r\n\r\n            <Form.Group controlId=\"formDescription\">\r\n              <Form.Label>Volunteers</Form.Label>\r\n              <Select\r\n                name=\"volunteers\"\r\n                placeholder=\"Select Volunteers\"\r\n                isMulti={true}\r\n                options={volunteers_option}\r\n                onChange={this.handleVolunteersChange}\r\n              />\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n              <Form.Label>Description</Form.Label>\r\n              <Form.Control\r\n                as=\"textarea\"\r\n                rows=\"3\"\r\n                name=\"description\"\r\n                onChange={this.handleChange}\r\n                value={this.state.description}\r\n              />\r\n            </Form.Group>\r\n\r\n            <Form.Group\r\n              controlId=\"formDescription\"\r\n              style={{ height: 30, marginTop: 22 }}\r\n            >\r\n              <Button\r\n                variant=\"primary\"\r\n                className=\"btn float-right\"\r\n                type=\"submit\"\r\n              >\r\n                Submit\r\n              </Button>\r\n            </Form.Group>\r\n          </div>\r\n        ) : (\r\n          <Row>\r\n            <Col sm={12} className=\"text-center\">\r\n              <Spinner animation=\"border\" role=\"status\" variant=\"dark\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n              </Spinner>\r\n            </Col>\r\n          </Row>\r\n        )}\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EventForm;\r\n\r\n","import React from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport Select from \"react-select\";\nimport DatePicker from \"react-datepicker\";\nimport API from \"../../../../utils/API\";\n\nclass SourceForm extends React.Component {\n  constructor() {\n    super();\n    this.owners = [];\n    this.coordinators = [];\n    this.persons = [];\n    this.regions = [];\n    this.sites = [];\n    this.states = [\n      \"Alabama\",\n      \"Alaska\",\n      \"Arizona\",\n      \"Arkansas\",\n      \"California\",\n      \"Colorado\",\n      \"Connecticut\",\n      \"Delaware\",\n      \"District of Columbia\",\n      \"Florida\",\n      \"Georgia\",\n      \"Hawaii\",\n      \"Idaho\",\n      \"Illinois\",\n      \"Indiana\",\n      \"Iowa\",\n      \"Kansas\",\n      \"Kentucky\",\n      \"Louisiana\",\n      \"Maine\",\n      \"Maryland\",\n      \"Massachusetts\",\n      \"Michigan\",\n      \"Minnesota\",\n      \"Mississippi\",\n      \"Missouri\",\n      \"Montana\",\n      \"Nebraska\",\n      \"Nevada\",\n      \"New Hampshire\",\n      \"New Jersey\",\n      \"New Mexico\",\n      \"New York\",\n      \"North Carolina\",\n      \"North Dakota\",\n      \"Ohio\",\n      \"Oklahoma\",\n      \"Oregon\",\n      \"Pennsylvania\",\n      \"Rhode Island\",\n      \"South Carolina\",\n      \"South Dakota\",\n      \"Tennessee\",\n      \"Texas\",\n      \"Utah\",\n      \"Vermont\",\n      \"Virginia\",\n      \"Washington\",\n      \"West Virginia\",\n      \"Wisconsin\",\n      \"Wyoming\",\n    ];\n    this.state = {\n      loader: false,\n      name: \"\",\n      region: null,\n      owner: null,\n      street: \"\",\n      city: \"\",\n      state: \"\",\n      zip: \"\",\n      coordinator: null,\n      count: \"\",\n      tree_type: \"\",\n      target_age: \"\",\n      available: \"\",\n      site: \"\",\n    };\n  }\n\n  async componentWillMount() {\n    this.setState({ loading: true });\n    API.getPersons().then((data) => {\n      this.setState(\n        (this.coordinators = data.data.filter((data) => {\n          return data.role.toLowerCase() === \"coordinator\";\n        }))\n      );\n      this.setState(\n        (this.owners = data.data.filter((data) => {\n          return data.role.toLowerCase() === \"landowner\";\n        }))\n      );\n      API.getSites().then((result) => {\n        this.setState((this.sites = result.data));\n\n        API.getRegions().then((data) => {\n          this.setState((this.regions = data.data));\n          this.setState({ loading: false });\n        });\n      });\n    });\n  }\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n\n    if (value === \"none\") {\n      this.setFormState({\n        [name]: null,\n      });\n      return;\n    }\n\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  handleSiteChange = (data) => {\n    if (data.value !== \"\") {\n      this.setState({\n        site: data.value,\n      });\n    }\n  };\n\n  setAvailableDate = (event) => {\n    this.setState({ available: event });\n  };\n\n  handleSubmit = async (event) => {\n    event.preventDefault();\n\n    if (\n      this.state.street === \"\" ||\n      this.state.owner === \"\" ||\n      this.state.city === \"\" ||\n      this.state.state === \"\" ||\n      this.state.zip === \"\" ||\n      this.state.region === null ||\n      this.state.coordinator === null ||\n      this.state.name === \"\" ||\n      this.state.count === \"\" || \n      this.state.tree_type === \"\" || \n      this.state.target_age === \"\" || \n      this.state.available === \"\" || \n      this.state.site === \"\"\n    ) {\n      alert(\"Looks like you forgot one!\");\n      return;\n    }\n\n    let sourceData = {\n      name: this.state.name,\n      region: this.state.region,\n      owner: this.state.owner,\n      address: {\n        street: this.state.street,\n        city: this.state.city,\n        state: this.state.state,\n        zip: this.state.zip,\n      },\n      coordinator: this.state.coordinator,\n      seedlings: {\n        count: this.state.count,\n        tree_type: this.state.tree_type,\n        available: this.state.available,\n        target_age: this.state.target_age,\n        intendSite: this.state.site,\n      }\n    };\n\n    try {\n      await API.createSource(sourceData);\n      alert(\"Source Added\");\n      this.props.history.goBack();\n    } catch (err) {\n      alert(err.message);\n    }\n  };\n\n  render() {\n\n    let sites_option = this.sites.map((value) => {\n      return {\n        label: value.name,\n        value: value._id,\n      };\n    });\n\n    return (\n      <Form className=\"formContainer\" onSubmit={this.handleSubmit}>\n        <h1>New Source</h1>\n        {!this.state.loading ? (\n          <>\n            <Form.Row>\n              <Form.Group as={Col} xs={12} md={4} controlId=\"formSiteName\">\n                <Form.Label>Source Name</Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  placeholder=\"\"\n                  name=\"name\"\n                  onChange={this.handleChange}\n                  value={this.state.name}\n                />\n              </Form.Group>\n\n              <Form.Group as={Col} xs={12} md={4} controlId=\"formRegion\">\n                <Form.Label>Region</Form.Label>\n                <Form.Control\n                  as=\"select\"\n                  name=\"region\"\n                  onChange={this.handleChange}\n                >\n                  <option>none</option>\n                  {this.regions.map((region, index) => (\n                    <option key={index} value={region._id}>\n                      {region.name}\n                    </option>\n                  ))}\n                </Form.Control>\n              </Form.Group>\n              <Form.Group as={Col} xs={12} md={4} controlId=\"formSiteOwner\">\n                <Form.Label>Owner</Form.Label>\n                <Form.Control\n                  as=\"select\"\n                  name=\"owner\"\n                  onChange={this.handleChange}\n                >\n                  <option>none</option>\n                  {this.owners.map((owner, index) => (\n                    <option key={index} value={owner._id}>\n                      {owner.name}\n                    </option>\n                  ))}\n                </Form.Control>\n              </Form.Group>\n            </Form.Row>\n\n            <Form.Row>\n              <Form.Group as={Col} xs={12} md={6} controlId=\"formGridAddress1\">\n                <Form.Label>Address</Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  placeholder=\"1234 Main St\"\n                  name=\"street\"\n                  onChange={this.handleChange}\n                  value={this.state.street}\n                />\n              </Form.Group>\n\n              <Form.Group as={Col} xs={12} md={6} controlId=\"formGridCity\">\n                <Form.Label>City</Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  name=\"city\"\n                  onChange={this.handleChange}\n                  value={this.state.city}\n                />\n              </Form.Group>\n            </Form.Row>\n\n            <Form.Row>\n              <Form.Group as={Col} xs={12} md={4} controlId=\"formGridState\">\n                <Form.Label>State</Form.Label>\n                <Form.Control\n                  as=\"select\"\n                  name=\"state\"\n                  onChange={this.handleChange}\n                >\n                  <option>select</option>\n                  {this.states.map((state, index) => (\n                    <option key={index}>{state}</option>\n                  ))}\n                </Form.Control>\n              </Form.Group>\n\n              <Form.Group as={Col} xs={12} md={4} controlId=\"formGridZip\">\n                <Form.Label>Zip</Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  name=\"zip\"\n                  onChange={this.handleChange}\n                  value={this.state.zip}\n                />\n              </Form.Group>\n\n              <Form.Group as={Col} xs={12} md={4} controlId=\"formCoordinator\">\n                <Form.Label>Coordinator</Form.Label>\n                <Form.Control\n                  as=\"select\"\n                  name=\"coordinator\"\n                  onChange={this.handleChange}\n                >\n                  <option>none</option>\n                  {this.coordinators.map((person, index) => (\n                    <option key={index} value={person._id}>\n                      {person.name}\n                    </option>\n                  ))}\n                </Form.Control>\n              </Form.Group>\n            </Form.Row>\n\n            <Form.Row>              \n              <Form.Group as={Col} xs={12} md={12} controlId=\"formMainText\" style={{margin: 0}}>\n                <Form.Label style={{textDecoration: \"underline\"}}>Seedlings Details:</Form.Label>\n              </Form.Group>\n\n              <Form.Group as={Col} xs={12} md={4} controlId=\"formGridCity\">\n                <Form.Label>Count</Form.Label>\n                <Form.Control\n                  type=\"number\"\n                  name=\"count\"\n                  onChange={this.handleChange}\n                  value={this.state.count}\n                />\n              </Form.Group>\n              \n              <Form.Group as={Col} xs={12} md={4} controlId=\"formGridCity\">\n                <Form.Label>Target Age (year)</Form.Label>\n                <Form.Control\n                  type=\"number\"\n                  name=\"target_age\"\n                  onChange={this.handleChange}\n                  value={this.state.target_age}\n                />\n              </Form.Group>\n              \n              <Form.Group as={Col} xs={12} md={4} controlId=\"formGridCity\">\n                <Form.Label>Available Date</Form.Label>\n                <DatePicker\n                  className=\"form-control\"\n                  placeholder=\"MM/DD/YYYY\"\n                  onChange={this.setAvailableDate}\n                  minDate={new Date()}\n                  showYearDropdown\n                  yearDropdownItemNumber={5}\n                  dateFormatCalendar=\"MMMM\"\n                  scrollableYearDropdown\n                  selected={\n                    this.state.available ? new Date(this.state.available) : \"\"\n                  }\n                  name=\"available\"\n                />\n              </Form.Group>  \n              \n              <Form.Group as={Col} xs={12} md={6} controlId=\"formGridCity\">\n                <Form.Label>Tree Type</Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  name=\"tree_type\"\n                  onChange={this.handleChange}\n                  value={this.state.tree_type}\n                />\n                <small>Please use comma(,) to sepereate type</small>\n              </Form.Group>\n              \n              <Form.Group as={Col} xs={12} md={6} controlId=\"formGridCity\">\n                <Form.Label>Site</Form.Label>\n                <Select\n                  name=\"site\"\n                  placeholder=\"Select Site\"\n                  options={sites_option}\n                  value={sites_option.filter(\n                    ({ value }) => value === this.state.site\n                  )}\n                  onChange={this.handleSiteChange}\n                />\n              </Form.Group>              \n            </Form.Row>\n\n            <Form.Group\n              controlId=\"formDescription\"\n              style={{ height: 30, marginTop: 22 }}\n            >\n              <Button\n                variant=\"primary\"\n                className=\"btn float-right\"\n                type=\"submit\"\n              >\n                Submit\n              </Button>\n            </Form.Group>\n          </>\n        ) : (\n          <Row>\n            <Col sm={12} className=\"text-center\">\n              <Spinner animation=\"border\" role=\"status\" variant=\"dark\">\n                <span className=\"sr-only\">Loading...</span>\n              </Spinner>\n            </Col>\n          </Row>\n        )}\n      </Form>\n    );\n  }\n}\n\nexport default SourceForm;","import React from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport API from \"../../../../utils/API\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Select from \"react-select\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nclass EventForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.coordinators = [];\n    this.persons = [];\n    this.state = {\n      loader: false,\n      persons: [],\n      sites: [],\n      site: null,\n      coordinator: null,\n      description: \"\",\n      date: \"\",\n      startDate: null,\n      endDate: null,\n      volunteers: []\n    };\n  }\n\n  componentWillMount() {\n    \n    if(this.props.location.event === undefined) \n    {\n      this.props.history.push('/dashboard/events');\n    }\n    else if(this.props.location.event && this.props.location.event._id === undefined) \n    {\n      this.props.history.push('/dashboard/events');\n    } \n    else \n    {\n      let selected_volunteers_option = this.props.location.event.volunteers.map((value) => {\n        return {\n          label: value.name,\n          value: value._id,\n        };\n      });\n\n      this.setState({\n        loader: true,\n        persons: [],\n        sites: [],\n        _id: this.props.location.event._id,\n        site: this.props.location.event.site && this.props.location.event.site._id ? this.props.location.event.site._id : null,\n        coordinator: this.props.location.event.coordinator && this.props.location.event.coordinator._id ? this.props.location.event.coordinator._id : null,\n        description: this.props.location.event.description,\n        startDate: this.props.location.event.startDate,\n        endDate: this.props.location.event.endDate,\n        volunteers: selected_volunteers_option\n      });\n\n      API.getPersons().then((result) => {\n        this.setState({\n          persons: result.data,\n          coordinators: result.data.filter((data) => {\n            return data.role.toLowerCase() === \"coordinator\";\n          }),\n        });\n\n        API.getSites().then((result) => {\n          this.setState({ sites: result.data });\n\n          API.getPersons().then((result) => {\n            this.setState({ persons: result.data });\n            this.setState({ loader: false });\n          });\n        });\n      });\n    }\n  }\n\n  handleSiteChange = (data) => {\n    if (data.value !== \"\") {\n      this.setState({\n        site: data.value,\n      });\n    }\n  };\n\n  handleCoordinatorChange = (data) => {\n    if (data.value !== \"\") {\n      this.setState({\n        coordinator: data.value,\n      });\n    }\n  };\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n\n    if (value === \"none\") {\n      this.setState({\n        [name]: null,\n      });\n      return;\n    }\n\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  handleSubmit = async (event) => {\n    event.preventDefault();\n\n    if (this.state.site === null || this.state.coordinator === null || this.state.coordinator === null) {\n      alert(\"Looks like you forgot one!\");\n      return;\n    }\n\n    let eventData = {\n      _id: this.state._id,\n      site: this.state.site,\n      coordinator: this.state.coordinator,\n      description: this.state.description,\n      startDate: this.state.startDate,\n      endDate: this.state.endDate,\n      volunteers: this.state.volunteers\n    };\n\n    try {\n      await API.updateEvent(eventData);\n      alert(\"Event Updated\");\n      this.props.history.goBack();\n    } catch (err) {\n      console.log(err.message);\n    }\n        \n  };\n\n  setStartDate = (event) => {\n    this.setState({ startDate: event });\n  };\n\n  setEndDate = (event) => {\n    this.setState({ endDate: event });\n  };\n\n  handleVolunteersChange = (event) => {\n\n    let new_arr = event.map((v) => {\n      return v.value;\n    });\n\n    this.setState({ volunteers: new_arr });\n\n    console.log(new_arr)\n  }\n\n  render() {\n    let sites_option = this.state.sites.map((value) => {\n      return {\n        label: value.name,\n        value: value._id,\n      };\n    });\n\n    let coordinators = this.state.persons.filter((data) => {\n      return data.role.toLowerCase() === \"coordinator\";\n    });\n\n    let coordinators_option = coordinators.map((value) => {\n      return {\n        label: value.name,\n        value: value._id,\n      };\n    });\n\n    let volunteers = this.state.persons.filter((data) => {\n      return data.role.toLowerCase() === \"volunteer\";\n    });\n\n    let volunteers_option = volunteers.map((value) => {\n      return {\n        label: value.name,\n        value: value._id,\n      };\n    });\n\n    return (\n      <Form\n        className=\"formContainer\"\n        onSubmit={this.handleSubmit}\n        style={{ minHeight: 505 }}\n      >\n        <h1>Update Event</h1>\n        {!this.state.loader ? (\n          <div>\n            <Form.Row>\n              <Form.Group as={Col} xs={12} md={6} controlId=\"formSite\">\n                <Form.Label>Site</Form.Label>\n                <Select\n                  name=\"site\"\n                  placeholder=\"Select Site\"\n                  options={sites_option}\n                  value={sites_option.filter(\n                    ({ value }) => value === this.state.site\n                  )}\n                  onChange={this.handleSiteChange}\n                />\n              </Form.Group>\n\n              <Form.Group as={Col} xs={12} md={6} controlId=\"formCoordinator\">\n                <Form.Label>Coordinator</Form.Label>\n                <Select\n                  name=\"coordinator\"\n                  placeholder=\"Select Coordinator\"\n                  options={coordinators_option}\n                  value={coordinators_option.filter(\n                    ({ value }) => value === this.state.coordinator\n                  )}\n                  onChange={this.handleCoordinatorChange}\n                />\n              </Form.Group>\n            </Form.Row>\n\n            <Form.Row>\n              <Form.Group as={Col} controlId=\"formDate\">\n                <Form.Label>Start Date</Form.Label>\n                <DatePicker\n                  autoComplete={false}\n                  className=\"form-control\"\n                  placeholder=\"MM/DD/YYYY\"\n                  onChange={this.setStartDate}\n                  minDate={new Date()}\n                  showYearDropdown\n                  yearDropdownItemNumber={5}\n                  dateFormatCalendar=\"MMMM\"\n                  scrollableYearDropdown\n                  selectsStart\n                  selected={\n                    this.state.startDate ? new Date(this.state.startDate) : \"\"\n                  }\n                  startDate={\n                    this.state.startDate ? new Date(this.state.startDate) : \"\"\n                  }\n                  endDate={\n                    this.state.endDate ? new Date(this.state.endDate) : \"\"\n                  }\n                  name=\"startDate\"\n                />\n              </Form.Group>\n\n              <Form.Group as={Col} controlId=\"formEndTime\">\n                <Form.Label>End Date</Form.Label>\n                <DatePicker\n                  className=\"form-control\"\n                  placeholder=\"MM/DD/YYYY\"\n                  onChange={this.setEndDate}\n                  minDate={\n                    new Date(this.state.startDate) > new Date()\n                      ? new Date(this.state.startDate)\n                      : new Date()\n                  }\n                  showYearDropdown\n                  yearDropdownItemNumber={5}\n                  dateFormatCalendar=\"MMMM\"\n                  scrollableYearDropdown\n                  selectsEnd\n                  selected={\n                    this.state.endDate ? new Date(this.state.endDate) : \"\"\n                  }\n                  startDate={\n                    this.state.startDate ? new Date(this.state.startDate) : \"\"\n                  }\n                  endDate={\n                    this.state.endDate ? new Date(this.state.endDate) : \"\"\n                  }\n                  name=\"endDate\"\n                />\n              </Form.Group>\n            </Form.Row>\n\n            <Form.Group controlId=\"formDescription\">\n              <Form.Label>Volunteers</Form.Label>\n              <Select\n                name=\"volunteers\"\n                placeholder=\"Select Volunteers\"\n                isMulti={true}\n                options={volunteers_option}\n                defaultValue={this.state.volunteers}\n                onChange={this.handleVolunteersChange}\n              />\n            </Form.Group>\n\n            <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n              <Form.Label>Description</Form.Label>\n              <Form.Control\n                as=\"textarea\"\n                rows=\"3\"\n                name=\"description\"\n                onChange={this.handleChange}\n                value={this.state.description}\n              />\n            </Form.Group>\n\n            <Form.Group\n              controlId=\"formDescription\"\n              style={{ height: 30, marginTop: 22 }}\n            >\n              <Button\n                variant=\"primary\"\n                className=\"btn float-right\"\n                type=\"submit\"\n              >\n                Submit\n              </Button>\n            </Form.Group>\n          </div>\n        ) : (\n          <Row>\n            <Col sm={12} className=\"text-center\">\n              <Spinner animation=\"border\" role=\"status\" variant=\"dark\">\n                <span className=\"sr-only\">Loading...</span>\n              </Spinner>\n            </Col>\n          </Row>\n        )}\n      </Form>\n    );\n  }\n}\n\nexport default EventForm;","import React from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport Select from \"react-select\";\nimport DatePicker from \"react-datepicker\";\nimport API from \"../../../../utils/API\";\n\nclass UpdateSourceForm extends React.Component {\n  constructor() {\n    super();\n    this.owners = [];\n    this.coordinators = [];\n    this.persons = [];\n    this.regions = [];\n    this.sites = [];\n    this.states = [\n      \"Alabama\",\n      \"Alaska\",\n      \"Arizona\",\n      \"Arkansas\",\n      \"California\",\n      \"Colorado\",\n      \"Connecticut\",\n      \"Delaware\",\n      \"District of Columbia\",\n      \"Florida\",\n      \"Georgia\",\n      \"Hawaii\",\n      \"Idaho\",\n      \"Illinois\",\n      \"Indiana\",\n      \"Iowa\",\n      \"Kansas\",\n      \"Kentucky\",\n      \"Louisiana\",\n      \"Maine\",\n      \"Maryland\",\n      \"Massachusetts\",\n      \"Michigan\",\n      \"Minnesota\",\n      \"Mississippi\",\n      \"Missouri\",\n      \"Montana\",\n      \"Nebraska\",\n      \"Nevada\",\n      \"New Hampshire\",\n      \"New Jersey\",\n      \"New Mexico\",\n      \"New York\",\n      \"North Carolina\",\n      \"North Dakota\",\n      \"Ohio\",\n      \"Oklahoma\",\n      \"Oregon\",\n      \"Pennsylvania\",\n      \"Rhode Island\",\n      \"South Carolina\",\n      \"South Dakota\",\n      \"Tennessee\",\n      \"Texas\",\n      \"Utah\",\n      \"Vermont\",\n      \"Virginia\",\n      \"Washington\",\n      \"West Virginia\",\n      \"Wisconsin\",\n      \"Wyoming\",\n    ];\n    this.state = {\n      loader: false,\n      _id: \"\",\n      name: \"\",\n      region: null,\n      owner: null,\n      street: \"\",\n      city: \"\",\n      state: \"\",\n      zip: \"\",\n      coordinator: null,\n      count: \"\",\n      tree_type: \"\",\n      target_age: \"\",\n      available: \"\",\n      site: \"\",\n    };\n  }\n\n  async componentWillMount() {\n\n    if(this.props.location.source === undefined) \n    {\n      this.props.history.push('/dashboard/source');\n    }\n    else if(this.props.location.source && this.props.location.source._id === undefined) \n    {\n      this.props.history.push('/dashboard/source');\n    } \n    else \n    {\n      this.setState({\n        loading: true,\n        _id: this.props.location.source._id,\n        name: this.props.location.source.name,\n        region: this.props.location.source.region && this.props.location.source.region._id ? this.props.location.source.region._id : null,\n        owner: this.props.location.source.owner && this.props.location.source.owner._id ? this.props.location.source.owner._id : null,\n        street: this.props.location.source.address.street ? this.props.location.source.address.street : \"\",\n        city: this.props.location.source.address.city ? this.props.location.source.address.city : \"\",\n        state: this.props.location.source.address.state ? this.props.location.source.address.state : \"\",\n        zip: this.props.location.source.address.zip ? this.props.location.source.address.zip : \"\",\n        coordinator: this.props.location.source.coordinator && this.props.location.source.coordinator._id ? this.props.location.source.coordinator._id : null,\n        count: this.props.location.source.seedlings.count,\n        tree_type: this.props.location.source.seedlings.tree_type,\n        available: this.props.location.source.seedlings.available,\n        target_age: this.props.location.source.seedlings.target_age,\n        site: this.props.location.source.seedlings.intendSite && this.props.location.source.seedlings.intendSite._id ? this.props.location.source.seedlings.intendSite._id : null\n      });\n\n      API.getPersons().then((data) => {\n        this.setState(\n          (this.coordinators = data.data.filter((data) => {\n            return data.role.toLowerCase() === \"coordinator\";\n          }))\n        );\n        this.setState(\n          (this.owners = data.data.filter((data) => {\n            return data.role.toLowerCase() === \"landowner\";\n          }))\n        );\n        API.getSites().then((result) => {\n          this.setState((this.sites = result.data));\n\n          API.getRegions().then((data) => {\n            this.setState((this.regions = data.data));\n            this.setState({ loading: false });\n          });\n        });\n      });\n    }\n  }\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n\n    if (value === \"none\") {\n      this.setFormState({\n        [name]: null,\n      });\n      return;\n    }\n\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  handleSiteChange = (data) => {\n    if (data.value !== \"\") {\n      this.setState({\n        site: data.value,\n      });\n    }\n  };\n\n  setAvailableDate = (event) => {\n    this.setState({ available: event });\n  };\n\n  handleSubmit = async (event) => {\n    event.preventDefault();\n\n    console.log(this.state)\n\n    if (\n      this.state.street === \"\" ||\n      this.state.owner === \"\" ||\n      this.state.city === \"\" ||\n      this.state.state === \"\" ||\n      this.state.zip === \"\" ||\n      this.state.region === null ||\n      this.state.coordinator === null ||\n      this.state.name === \"\" ||\n      this.state.count === \"\" || \n      this.state.tree_type === \"\" || \n      this.state.target_age === \"\" || \n      this.state.available === \"\" || \n      this.state.site === \"\"\n    ) {\n      alert(\"Looks like you forgot one!\");\n      return;\n    }\n\n    let sourceData = {\n      _id: this.state._id,\n      name: this.state.name,\n      region: this.state.region,\n      owner: this.state.owner,\n      address: {\n        street: this.state.street,\n        city: this.state.city,\n        state: this.state.state,\n        zip: this.state.zip,\n      },\n      coordinator: this.state.coordinator,\n      seedlings: {\n        count: this.state.count,\n        tree_type: this.state.tree_type,\n        available: this.state.available,\n        target_age: this.state.target_age,\n        intendSite: this.state.site,\n      }\n    };\n\n    try {\n      await API.updateSource(sourceData);\n      alert(\"Source Updated\");\n      this.props.history.goBack();\n    } catch (err) {\n      alert(err.message);\n    }\n  };\n\n  render() {\n\n    let sites_option = this.sites.map((value) => {\n      return {\n        label: value.name,\n        value: value._id,\n      };\n    });\n\n    return (\n      <Form className=\"formContainer\" onSubmit={this.handleSubmit}>\n        <h1>Update Source</h1>\n        {!this.state.loading ? (\n          <>\n            <Form.Row>\n              <Form.Group as={Col} xs={12} md={4} controlId=\"formSiteName\">\n                <Form.Label>Source Name</Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  placeholder=\"\"\n                  name=\"name\"\n                  onChange={this.handleChange}\n                  value={this.state.name}\n                />\n              </Form.Group>\n\n              <Form.Group as={Col} xs={12} md={4} controlId=\"formRegion\">\n                <Form.Label>Region</Form.Label>\n                <Form.Control\n                  as=\"select\"\n                  name=\"region\"\n                  onChange={this.handleChange}\n                  value={this.state.region}\n                >\n                  <option>none</option>\n                  {this.regions.map((region, index) => (\n                    <option key={index} value={region._id}>\n                      {region.name}\n                    </option>\n                  ))}\n                </Form.Control>\n              </Form.Group>\n              <Form.Group as={Col} xs={12} md={4} controlId=\"formSiteOwner\">\n                <Form.Label>Owner</Form.Label>\n                <Form.Control\n                  as=\"select\"\n                  name=\"owner\"\n                  onChange={this.handleChange}\n                  value={this.state.owner}\n                >\n                  <option>none</option>\n                  {this.owners.map((owner, index) => (\n                    <option key={index} value={owner._id}>\n                      {owner.name}\n                    </option>\n                  ))}\n                </Form.Control>\n              </Form.Group>\n            </Form.Row>\n\n            <Form.Row>\n              <Form.Group as={Col} xs={12} md={6} controlId=\"formGridAddress1\">\n                <Form.Label>Address</Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  placeholder=\"1234 Main St\"\n                  name=\"street\"\n                  onChange={this.handleChange}\n                  value={this.state.street}\n                />\n              </Form.Group>\n\n              <Form.Group as={Col} xs={12} md={6} controlId=\"formGridCity\">\n                <Form.Label>City</Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  name=\"city\"\n                  onChange={this.handleChange}\n                  value={this.state.city}\n                />\n              </Form.Group>\n            </Form.Row>\n\n            <Form.Row>\n              <Form.Group as={Col} xs={12} md={4} controlId=\"formGridState\">\n                <Form.Label>State</Form.Label>\n                <Form.Control\n                  as=\"select\"\n                  name=\"state\"\n                  onChange={this.handleChange}\n                  value={this.state.state}\n                >\n                  <option>select</option>\n                  {this.states.map((state, index) => (\n                    <option key={index}>{state}</option>\n                  ))}\n                </Form.Control>\n              </Form.Group>\n\n              <Form.Group as={Col} xs={12} md={4} controlId=\"formGridZip\">\n                <Form.Label>Zip</Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  name=\"zip\"\n                  onChange={this.handleChange}\n                  value={this.state.zip}\n                />\n              </Form.Group>\n\n              <Form.Group as={Col} xs={12} md={4} controlId=\"formCoordinator\">\n                <Form.Label>Coordinator</Form.Label>\n                <Form.Control\n                  as=\"select\"\n                  name=\"coordinator\"\n                  onChange={this.handleChange}\n                  value={this.state.coordinator}\n                >\n                  <option>none</option>\n                  {this.coordinators.map((person, index) => (\n                    <option key={index} value={person._id}>\n                      {person.name}\n                    </option>\n                  ))}\n                </Form.Control>\n              </Form.Group>\n            </Form.Row>\n\n            <Form.Row>              \n              <Form.Group as={Col} xs={12} md={12} controlId=\"formMainText\" style={{margin: 0}}>\n                <Form.Label style={{textDecoration: \"underline\"}}>Seedlings Details:</Form.Label>\n              </Form.Group>\n\n              <Form.Group as={Col} xs={12} md={4} controlId=\"formGridCity\">\n                <Form.Label>Count</Form.Label>\n                <Form.Control\n                  type=\"number\"\n                  name=\"count\"\n                  onChange={this.handleChange}\n                  value={this.state.count}\n                />\n              </Form.Group>\n              \n              <Form.Group as={Col} xs={12} md={4} controlId=\"formGridCity\">\n                <Form.Label>Target Age</Form.Label>\n                <Form.Control\n                  type=\"number\"\n                  name=\"target_age\"\n                  onChange={this.handleChange}\n                  value={this.state.target_age}\n                />\n              </Form.Group>\n              \n              <Form.Group as={Col} xs={12} md={4} controlId=\"formGridCity\">\n                <Form.Label>Available Date</Form.Label>\n                <DatePicker\n                  className=\"form-control\"\n                  placeholder=\"MM/DD/YYYY\"\n                  onChange={this.setAvailableDate}\n                  minDate={new Date()}\n                  showYearDropdown\n                  yearDropdownItemNumber={5}\n                  dateFormatCalendar=\"MMMM\"\n                  scrollableYearDropdown\n                  selected={\n                    this.state.available ? new Date(this.state.available) : \"\"\n                  }\n                  name=\"available\"\n                />\n              </Form.Group> \n              \n              <Form.Group as={Col} xs={12} md={6} controlId=\"formGridCity\">\n                <Form.Label>Tree Type</Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  name=\"tree_type\"\n                  onChange={this.handleChange}\n                  value={this.state.tree_type}\n                />\n                <small>Please use comma(,) to sepereate type</small>\n              </Form.Group>\n              \n              <Form.Group as={Col} xs={12} md={6} controlId=\"formGridCity\">\n                <Form.Label>Site</Form.Label>\n                <Select\n                  name=\"site\"\n                  placeholder=\"Select Site\"\n                  options={sites_option}\n                  defaultValue={this.state.site}\n                  value={sites_option.filter(\n                    ({ value }) => value === this.state.site\n                  )}\n                  onChange={this.handleSiteChange}\n                />\n              </Form.Group>              \n            </Form.Row>\n\n            <Form.Group\n              controlId=\"formDescription\"\n              style={{ height: 30, marginTop: 22 }}\n            >\n              <Button\n                variant=\"primary\"\n                className=\"btn float-right\"\n                type=\"submit\"\n              >\n                Submit\n              </Button>\n            </Form.Group>\n          </>\n        ) : (\n          <Row>\n            <Col sm={12} className=\"text-center\">\n              <Spinner animation=\"border\" role=\"status\" variant=\"dark\">\n                <span className=\"sr-only\">Loading...</span>\n              </Spinner>\n            </Col>\n          </Row>\n        )}\n      </Form>\n    );\n  }\n}\n\nexport default UpdateSourceForm;","import React from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Spinner from \"react-bootstrap/Spinner\";\r\nimport API from \"../../../../utils/API\";\r\nimport Select from \"react-select\";\r\n\r\nclass RegionForm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.coordinators = [];\r\n    this.coordinators_option = [];\r\n    this.state = {\r\n      loader: false,\r\n      name: \"\",\r\n      coordinator: \"\",\r\n      description: \"\",\r\n    };\r\n  }\r\n\r\n  componentWillMount() {\r\n\r\n    if(this.props.location.region === undefined) \r\n    {\r\n      this.props.history.push('/dashboard/regions');\r\n    }\r\n    else if(this.props.location.region && this.props.location.region._id === undefined) \r\n    {\r\n      this.props.history.push('/dashboard/regions');\r\n    } \r\n    else \r\n    {\r\n      this.setState({\r\n        loader: true,\r\n        _id: this.props.location.region._id,\r\n        name: this.props.location.region.name,\r\n        coordinator:\r\n          this.props.location.region.coordinator &&\r\n          this.props.location.region.coordinator._id\r\n            ? this.props.location.region.coordinator._id\r\n            : null,\r\n        description: this.props.location.region.description,\r\n      });\r\n      API.getPersons().then((data) => {\r\n        this.setState(\r\n          (this.coordinators = data.data.filter((data) => {\r\n            return data.role.toLowerCase() === \"coordinator\";\r\n          }))\r\n        );\r\n        this.setState({ loader: false });\r\n      });\r\n    }\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  handleSelectChange = (data) => {\r\n    if (data.id !== \"\") {\r\n      this.setState({\r\n        coordinator: data.value,\r\n      });\r\n    }\r\n  };\r\n\r\n  handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    if (\r\n      this.state.name === \"\" ||\r\n      this.state.coordinator === \"\" ||\r\n      this.state.description === \"\"\r\n    ) {\r\n      alert(\"Looks like you forgot one!\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      await API.updateRegion(this.state);\r\n      alert(\"Region Updated\");\r\n      this.props.history.goBack();\r\n    } catch (err) {\r\n      console.log(err.message);\r\n    }\r\n\r\n    this.setState({\r\n      name: \"\",\r\n      coordinator: \"\",\r\n      description: \"\",\r\n    });\r\n  };\r\n\r\n  render() {\r\n    let coordinators_option = this.coordinators.map((value) => {\r\n      return {\r\n        label: value.name,\r\n        value: value._id,\r\n      };\r\n    });\r\n\r\n    return (\r\n      <div className=\"formContainer\">\r\n        <Form onSubmit={this.handleSubmit}>\r\n          <h1>Update Region</h1>\r\n          {!this.state.loader ? (\r\n            <>\r\n              <Form.Group controlId=\"formRegion\">\r\n                <Form.Label>Region Name</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"Enter region name\"\r\n                  name=\"name\"\r\n                  value={this.state.name}\r\n                  onChange={this.handleChange}\r\n                />\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId=\"formCoordinator\">\r\n                <Form.Label>Coordinator</Form.Label>\r\n                <Select\r\n                  name=\"coordinator\"\r\n                  placeholder=\"Select Coordinator\"\r\n                  options={coordinators_option}\r\n                  value={coordinators_option.filter(\r\n                    ({ value }) => value === this.state.coordinator\r\n                  )}\r\n                  onChange={this.handleSelectChange}\r\n                />\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId=\"formDescription\">\r\n                <Form.Label>Description</Form.Label>\r\n                <Form.Control\r\n                  as=\"textarea\"\r\n                  rows=\"3\"\r\n                  placeholder=\"Enter brief description\"\r\n                  name=\"description\"\r\n                  value={this.state.description}\r\n                  onChange={this.handleChange}\r\n                />\r\n              </Form.Group>\r\n\r\n              <Form.Group\r\n                controlId=\"formDescription\"\r\n                style={{ height: 30, marginTop: 22 }}\r\n              >\r\n                <Button\r\n                  variant=\"dark\"\r\n                  className=\"btn float-right\"\r\n                  type=\"submit\"\r\n                >\r\n                  Submit\r\n                </Button>\r\n              </Form.Group>\r\n            </>\r\n          ) : (\r\n            <Row>\r\n              <Col sm={12} className=\"text-center\">\r\n                <Spinner animation=\"border\" role=\"status\" variant=\"dark\">\r\n                  <span className=\"sr-only\">Loading...</span>\r\n                </Spinner>\r\n              </Col>\r\n            </Row>\r\n          )}\r\n        </Form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RegionForm;\r\n\r\n","import React from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport API from \"../../../../utils/API\";\n\nclass UpdateSiteForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.owners = [];\n    this.coordinators = [];\n    this.persons = [];\n    this.regions = [];\n    this.states = [\n      \"Alabama\",\n      \"Alaska\",\n      \"Arizona\",\n      \"Arkansas\",\n      \"California\",\n      \"Colorado\",\n      \"Connecticut\",\n      \"Delaware\",\n      \"District of Columbia\",\n      \"Florida\",\n      \"Georgia\",\n      \"Hawaii\",\n      \"Idaho\",\n      \"Illinois\",\n      \"Indiana\",\n      \"Iowa\",\n      \"Kansas\",\n      \"Kentucky\",\n      \"Louisiana\",\n      \"Maine\",\n      \"Maryland\",\n      \"Massachusetts\",\n      \"Michigan\",\n      \"Minnesota\",\n      \"Mississippi\",\n      \"Missouri\",\n      \"Montana\",\n      \"Nebraska\",\n      \"Nevada\",\n      \"New Hampshire\",\n      \"New Jersey\",\n      \"New Mexico\",\n      \"New York\",\n      \"North Carolina\",\n      \"North Dakota\",\n      \"Ohio\",\n      \"Oklahoma\",\n      \"Oregon\",\n      \"Pennsylvania\",\n      \"Rhode Island\",\n      \"South Carolina\",\n      \"South Dakota\",\n      \"Tennessee\",\n      \"Texas\",\n      \"Utah\",\n      \"Vermont\",\n      \"Virginia\",\n      \"Washington\",\n      \"West Virginia\",\n      \"Wisconsin\",\n      \"Wyoming\",\n    ];\n    this.state = {\n      loading: false,\n      _id: null,\n      name: \"\",\n      region: null,\n      owner: null,\n      street: \"\",\n      city: \"\",\n      state: \"\",\n      zip: \"\",\n      latitude: \"\",\n      longitude: \"\",\n      status: \"\",\n      coordinator: null,\n      capacity: \"\",\n      tree_type: \"\",\n      location: \"\",\n      number_planted: \"\",\n      notes: \"\",\n    };\n  }\n\n  async componentWillMount() {\n\n    if(this.props.location.site === undefined) \n    {\n      this.props.history.push('/dashboard/sites');\n    }\n    else if(this.props.location.site && this.props.location.site._id === undefined) \n    {\n      this.props.history.push('/dashboard/sites');\n    } \n    else \n    {\n      this.setState({\n        loading: true,\n        _id: this.props.location.site._id,\n        name: this.props.location.site.name,\n        region: this.props.location.site.region && this.props.location.site.region._id ? this.props.location.site.region._id : null,\n        owner: this.props.location.site.owner && this.props.location.site.owner._id ? this.props.location.site.owner._id : null,\n        street: this.props.location.site.address.street ? this.props.location.site.address.street : \"\",\n        city: this.props.location.site.address.city ? this.props.location.site.address.city : \"\",\n        state: this.props.location.site.address.state ? this.props.location.site.address.state : \"\",\n        zip: this.props.location.site.address.zip ? this.props.location.site.address.zip : \"\",\n        latitude: this.props.location.site.latitude,\n        longitude: this.props.location.site.longitude,\n        status: this.props.location.site.status,\n        coordinator: this.props.location.site.coordinator && this.props.location.site.coordinator._id ? this.props.location.site.coordinator._id : null,\n        capacity: this.props.location.site.plantingTarget.capacity,\n        tree_type: this.props.location.site.plantingTarget.tree_type,\n        location: this.props.location.site.plantingTarget.location,\n        number_planted: this.props.location.site.plantingTarget.number_planted,\n        notes: this.props.location.site.notes,\n      });\n\n      API.getPersons().then((data) => {\n        this.setState(\n          (this.coordinators = data.data.filter((data) => {\n            return data.role.toLowerCase() === \"coordinator\";\n          }))\n        );\n        this.setState(\n          (this.owners = data.data.filter((data) => {\n            return data.role.toLowerCase() === \"landowner\";\n          }))\n        );\n        API.getRegions().then((data) => {\n          this.setState((this.regions = data.data));\n          this.setState({ loading: false });\n        });\n      });\n    }\n  }\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n\n    if (value === \"none\") {\n      this.setFormState({\n        [name]: null,\n      });\n      return;\n    }\n\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  handleSubmit = async (event) => {\n    event.preventDefault();\n\n    if (\n      this.state.street === \"\" ||\n      this.state.city === \"\" ||\n      this.state.state === \"\" ||\n      this.state.zip === \"\" ||\n      this.state.latitude === \"\" ||\n      this.state.longitude === \"\" ||\n      this.state.region === null ||\n      this.state.coordinator === null ||\n      this.state.name === \"\" ||\n      this.state.capacity === \"\" || \n      this.state.tree_type === \"\" || \n      this.state.location === \"\" || \n      this.state.number_planted === \"\"\n    ) {\n      alert(\"Looks like you forgot one!\");\n      return;\n    }\n\n    let siteData = {\n      _id: this.state._id,\n      name: this.state.name,\n      region: this.state.region,\n      owner: this.state.owner,\n      address: {\n        street: this.state.street,\n        city: this.state.city,\n        state: this.state.state,\n        zip: this.state.zip,\n      },\n      status: this.state.status,\n      latitude: this.state.latitude,\n      longitude: this.state.longitude,\n      coordinator: this.state.coordinator,\n      plantingTarget: {\n        capacity: this.state.capacity,\n        tree_type: this.state.tree_type,\n        location: this.state.location,\n        number_planted: this.state.number_planted,\n      },\n      notes: this.state.notes\n    };\n\n    try {\n      await API.updateSite(siteData);\n      alert(\"Site Updated\");\n      this.props.history.goBack();\n    } catch (err) {\n      alert(err.message);\n    }\n  };\n\n  render() {\n\n    return (\n      <Form className=\"formContainer\" onSubmit={this.handleSubmit}>\n        <h1>Update Site</h1>\n        {!this.state.loading ? (\n          <>\n            <Form.Row>\n              <Form.Group as={Col} xs={12} md={4} controlId=\"formSiteName\">\n                <Form.Label>Site Name</Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  placeholder=\"\"\n                  name=\"name\"\n                  onChange={this.handleChange}\n                  value={this.state.name}\n                />\n              </Form.Group>\n\n              <Form.Group as={Col} xs={12} md={4} controlId=\"formRegion\">\n                <Form.Label>Region</Form.Label>\n                <Form.Control\n                  as=\"select\"\n                  name=\"region\"\n                  value={this.state.region}\n                  onChange={this.handleChange}\n                >\n                  <option>none</option>\n                  {this.regions.map((region, index) => (\n                    <option key={index} value={region._id}>\n                      {region.name}\n                    </option>\n                  ))}\n                </Form.Control>\n              </Form.Group>\n              <Form.Group as={Col} xs={12} md={4} controlId=\"formSiteOwner\">\n                <Form.Label>Owner</Form.Label>\n                <Form.Control\n                  as=\"select\"\n                  name=\"owner\"\n                  value={this.state.owner}\n                  onChange={this.handleChange}\n                >\n                  <option>none</option>\n                  {this.owners.map((owner, index) => (\n                    <option key={index} value={owner._id}>\n                      {owner.name}\n                    </option>\n                  ))}\n                </Form.Control>\n              </Form.Group>\n            </Form.Row>\n\n            <Form.Row>\n              <Form.Group as={Col} xs={12} md={4} controlId=\"formGridAddress1\">\n                <Form.Label>Address</Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  placeholder=\"1234 Main St\"\n                  name=\"street\"\n                  onChange={this.handleChange}\n                  value={this.state.street}\n                />\n              </Form.Group>\n\n              <Form.Group as={Col} xs={12} md={3} controlId=\"formGridCity\">\n                <Form.Label>City</Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  name=\"city\"\n                  onChange={this.handleChange}\n                  value={this.state.city}\n                />\n              </Form.Group>\n\n              <Form.Group as={Col} xs={12} md={3} controlId=\"formGridState\">\n                <Form.Label>State</Form.Label>\n                <Form.Control\n                  as=\"select\"\n                  name=\"state\"\n                  value={this.state.state}\n                  onChange={this.handleChange}\n                >\n                  <option>select</option>\n                  {this.states.map((state, index) => (\n                    <option key={index}>{state}</option>\n                  ))}\n                </Form.Control>\n              </Form.Group>\n\n              <Form.Group as={Col} xs={12} md={2} controlId=\"formGridZip\">\n                <Form.Label>Zip</Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  name=\"zip\"\n                  onChange={this.handleChange}\n                  value={this.state.zip}\n                />\n              </Form.Group>\n            </Form.Row>\n\n            <Form.Row>              \n              <Form.Group as={Col} xs={12} md={12} controlId=\"formMainText\" style={{margin: 0}}>\n                <Form.Label style={{textDecoration: \"underline\"}}>Planting Target:</Form.Label>\n              </Form.Group>\n\n              <Form.Group as={Col} xs={12} md={3} controlId=\"formGridCity\">\n                <Form.Label>Capacity</Form.Label>\n                <Form.Control\n                  type=\"number\"\n                  name=\"capacity\"\n                  onChange={this.handleChange}\n                  value={this.state.capacity}\n                />\n              </Form.Group>\n              \n              <Form.Group as={Col} xs={12} md={3} controlId=\"formGridCity\">\n                <Form.Label>Tree Type</Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  name=\"tree_type\"\n                  onChange={this.handleChange}\n                  value={this.state.tree_type}\n                />\n                <small>Please use comma(,) to sepereate type</small>\n              </Form.Group>\n              \n              <Form.Group as={Col} xs={12} md={3} controlId=\"formGridCity\">\n                <Form.Label>Location</Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  name=\"location\"\n                  onChange={this.handleChange}\n                  value={this.state.location}\n                />\n              </Form.Group>\n              \n              <Form.Group as={Col} xs={12} md={3} controlId=\"formGridCity\">\n                <Form.Label>Number Planted</Form.Label>\n                <Form.Control\n                  type=\"number\"\n                  name=\"number_planted\"\n                  onChange={this.handleChange}\n                  value={this.state.number_planted}\n                />\n              </Form.Group>              \n            </Form.Row>\n\n            <Form.Row>\n              <Form.Group as={Col} xs={12} md={3} controlId=\"formGridCity\">\n                <Form.Label>Latitude</Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  name=\"latitude\"\n                  onChange={this.handleChange}\n                  value={this.state.latitude}\n                />\n              </Form.Group>\n\n              <Form.Group as={Col} xs={12} md={3} controlId=\"formGridZip\">\n                <Form.Label>longitude</Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  name=\"longitude\"\n                  onChange={this.handleChange}\n                  value={this.state.longitude}\n                />\n              </Form.Group>\n\n              <Form.Group as={Col} xs={12} md={3} controlId=\"formStatus\">\n                <Form.Label>Status</Form.Label>\n                <Form.Control\n                  as=\"select\"\n                  name=\"status\"\n                  value={this.state.status}\n                  onChange={this.handleChange}\n                >\n                  <option>none</option>\n                  <option>Pending</option>\n                  <option>Active</option>\n                  <option>Inactive</option>\n                </Form.Control>\n              </Form.Group>\n\n              <Form.Group as={Col} xs={12} md={3} controlId=\"formCoordinator\">\n                <Form.Label>Coordinator</Form.Label>\n                <Form.Control\n                  as=\"select\"\n                  name=\"coordinator\"\n                  value={this.state.coordinator}\n                  onChange={this.handleChange}\n                >\n                  <option>none</option>\n                  {this.coordinators.map((person, index) => (\n                    <option key={index} value={person._id}>\n                      {person.name}\n                    </option>\n                  ))}\n                </Form.Control>\n              </Form.Group>\n            </Form.Row>\n\n            <Form.Row>\n              <Form.Group as={Col} xs={12} md={12} controlId=\"formGridZip\">\n                <Form.Label>Notes</Form.Label>\n                <Form.Control\n                  as=\"textarea\"\n                  rows=\"3\"\n                  name=\"notes\"\n                  onChange={this.handleChange}\n                  value={this.state.notes}\n                />\n              </Form.Group>\n            </Form.Row>\n\n            <Form.Group>\n              <Form.File\n                id=\"profileImageSiteForm\"\n                label=\"Profile Image\"\n                custom\n                name=\"\"\n              />\n            </Form.Group>\n            <Form.Group>\n              <Form.File\n                id=\"contractSiteForm\"\n                label=\"Contract\"\n                custom\n                name=\"\"\n              />\n            </Form.Group>\n            <Form.Group>\n              <Form.File\n                id=\"imagesSiteForm\"\n                label=\"Additional Images\"\n                custom\n                name=\"\"\n              />\n            </Form.Group>\n            <Form.Group>\n              <Form.File\n                id=\"documentsSiteForm\"\n                label=\"Addition Documents\"\n                custom\n                name=\"\"\n              />\n            </Form.Group>\n\n            <Form.Group\n              controlId=\"formDescription\"\n              style={{ height: 30, marginTop: 22 }}\n            >\n              <Button\n                variant=\"primary\"\n                className=\"btn float-right\"\n                type=\"submit\"\n              >\n                Submit\n              </Button>\n            </Form.Group>\n          </>\n        ) : (\n          <Row>\n            <Col sm={12} className=\"text-center\">\n              <Spinner animation=\"border\" role=\"status\" variant=\"dark\">\n                <span className=\"sr-only\">Loading...</span>\n              </Spinner>\n            </Col>\n          </Row>\n        )}\n      </Form>\n    );\n  }\n}\n\nexport default UpdateSiteForm;","\nimport React, { useCallback } from \"react\";\nimport app from \"../userAuth/baseauth\";\n// import { AuthContext } from \"../userAuth/Auth\";\nimport { withRouter } from \"react-router\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport Container from \"react-bootstrap/Container\";\nimport Col from \"react-bootstrap/Col\";\nimport Row from \"react-bootstrap/Row\";\nimport \"./style.css\";\n\nconst Login = ({ history }) => {\n  const handleLogin = useCallback(\n    async (event) => {\n      event.preventDefault();\n      const { email, password } = event.target.elements;\n      try {\n        await app\n          .auth()\n          .signInWithEmailAndPassword(email.value, password.value);\n        history.push(\"/dashboard\");\n      } catch (error) {\n        alert(error);\n      }\n    },\n    [history]\n  );\n\n  return (\n    <Container className=\"parent\">\n      <Form onSubmit={handleLogin}>\n        <h3 className=\"centerMe loginText\">Sign in to continue.</h3>\n        <Form.Row className=\"justify-content-center\">\n          <Form.Group as={Col} xs={12} md={5} lg={4} controlId=\"formBasicEmail\">\n            <Form.Label className=\"loginText\">Email address</Form.Label>\n            <Form.Control type=\"email\" name=\"email\" placeholder=\"Enter email\" />\n          </Form.Group>\n        </Form.Row>\n\n        <Form.Row className=\"justify-content-center\">\n          <Form.Group as={Col} xs={12} md={5} lg={4} controlId=\"formBasicPassword\">\n            <Form.Label className=\"loginText\">Password</Form.Label>\n            <Form.Control type=\"password\" name=\"password\" placeholder=\"Password\" />\n          </Form.Group>\n        </Form.Row>\n        <Form.Row className=\"justify-content-center\">\n        <Button variant=\"dark\" className=\"btn\" type=\"submit\">\n          Submit\n  </Button>\n        </Form.Row>\n      </Form>\n    </Container>\n  )\n};\n\nexport default withRouter(Login);","import React, { useState, useEffect } from \"react\";\nimport app from \"./baseauth\";\nimport API from \"../../../utils/API\";\n\nexport const AuthContext = React.createContext();\n\nexport const AuthProvider = ({ children }) => {\n  const [currentUser, setCurrentUser] = useState(null);\n  const [pending, setPending] = useState(true);\n\n  useEffect(() => {\n    // when a user is logged in...\n    app.auth().onAuthStateChanged((user) => {\n      // make an API call with their firebase UID (provided from the user obj passed in)\n      // and return all data that belongs to that user\n      API.getPersonByUid(user.uid)\n        .then((dbUserres) => {\n          setCurrentUser({\n            currentUser: user,\n            dbUser: dbUserres.data,\n          });\n          // stops the loading page\n          setPending(false);\n        })\n        .catch((err) => {\n          // stops the loading page if failure in finding user\n          setPending(false);\n          alert(`${err.message} ...User not found... :(`);\n        });\n    });\n  }, []);\n\n  if (pending) {\n    return <>Loading...</>;\n  }\n\n  return (\n    // provides all children wrapped inside this provider tag the user info.\n    <AuthContext.Provider value={currentUser}>\n      {children} {console.log(currentUser)}\n    </AuthContext.Provider>\n  );\n};\n","import React, {useState, useEffect} from \"react\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Container from \"react-bootstrap/Container\";\nimport SideMenu from \"./SideMenu/SideMenu\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport RegionDisplay from \"./Regions/RegionDisplay/RegionDisplay\";\nimport SiteDisplay from \"./Sites/SiteDisplay/SiteDisplay\";\nimport EventDisplay from \"./Events/EventDisplay/EventDisplay\";\nimport SourceDisplay from \"./Seedlings/SourceDisplay/SourceDisplay\";\nimport PersonsDisplay from \"./Persons/PersonsDisplay/PersonsDisplay\";\nimport RegionForm from \"./Regions/NewRegionForm/RegionForm\";\nimport SiteForm from \"./Sites/NewSiteForm/SiteForm\";\nimport AdminForm from \"./Persons/NewPerson/NewAdminForm\";\nimport UserForm from \"./Persons/NewPerson/NewUserForm\";\nimport EventForm from \"./Events/NewEvent/NewEventForm\";\nimport SourceForm from \"./Seedlings/NewSource/NewSourceForm\";\nimport UpdateAdminForm from \"./Persons/UpdatePerson/UpdatePersonForm\";\nimport UpdateUserForm from \"./Persons/UpdatePerson/UpdatePersonForm\";\nimport UpdateEventForm from \"./Events/UpdateEventsForm/UpdateEventsForm\";\nimport UpdateSourceForm from \"./Seedlings/UpdateSourceForm/UpdateSourceForm\";\nimport UpdateRegionForm from \"./Regions/UpdateRegionForm/updateRegionForm\";\nimport UpdateSiteForm from \"./Sites/UpdateSiteForm/UpdateSiteForm\";\nimport \"./assets/style.css\";\nimport Navbar from \"../Navbar/Navbar\";\nimport Login from \"../authComponents/Login/Login\";\nimport { AuthProvider } from \"../authComponents/userAuth/Auth\";\n\n\n\nconst Dashboard = () => {\n\n  const [regionState, setRegionState] = useState({\n    regions: []\n  });\n  const [personsState, setPersonsState] = useState({\n    persons: []\n  });\n  const [sitesState, setSitesState] = useState({\n    sites: []\n  });\n  const [eventState, setEventState] = useState({\n    events: []\n  });\n\n  return (\n    <>\n    <Navbar />\n    <AuthProvider>\n      <Router>\n        <Container fluid>\n        <Row>\n          <Col xs={12} md={3} className=\"sideMenuCol\">\n            <SideMenu />\n          </Col>\n          <Col xs={12} md={9} className=\"dashboardContentView\">\n            <Switch>\n              \n              {/* <Route exact path =\"/dashboard/login\" component={Login} ></Route> */}\n\n              <Route exact path=\"/dashboard/regions\" component={RegionDisplay} />\n\n              <Route exact path=\"/dashboard/sites\" component={SiteDisplay} />\n\n              <Route exact path=\"/dashboard/events\" component={EventDisplay} />\n              \n              <Route exact path=\"/dashboard/source\" component={SourceDisplay} />\n              \n              <Route exact path=\"/dashboard/persons\" component={PersonsDisplay} />\n              \n              <Route exact path=\"/dashboard/newRegion\" component={RegionForm} />\n\n              <Route exact path=\"/dashboard/newSite\" component={SiteForm} />\n\n              <Route exact path=\"/dashboard/newAdmin\" component={AdminForm} />\n\n              <Route exact path=\"/dashboard/newPerson\" component={UserForm} />\n\n              <Route exact path=\"/dashboard/newEvent\" component={EventForm} />\n              \n              <Route exact path=\"/dashboard/newSource\" component={SourceForm} />\n\n              <Route exact path=\"/dashboard/updateRegion\" component={UpdateRegionForm} />\n\n              <Route exact path=\"/dashboard/updateSite\" component={UpdateSiteForm} />\n\n              <Route exact path=\"/dashboard/updateAdmin/:id\" component={UpdateAdminForm} />\n\n              <Route exact path=\"/dashboard/updatePerson/:id\" component={UpdateUserForm} />\n\n              <Route exact path=\"/dashboard/updateEvent\" component={UpdateEventForm} />\n\n              <Route exact path=\"/dashboard/updateSource\" component={UpdateSourceForm} />\n\n            </Switch>\n          </Col>\n        </Row>\n        </Container>\n      </Router>\n    </AuthProvider>\n    </>\n  )\n}\n\nexport default Dashboard;","import React from \"react\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Image from \"react-bootstrap/Image\";\nimport Container from \"react-bootstrap/Container\";\nimport Hands from \"../../../images/Hands.jpeg\";\nimport Tree from \"../../../images/Tree.jpeg\";\nimport Forest from \"../../../images/Forest.jpeg\";\nimport \"./Photo.css\";\nimport { Link } from \"react-router-dom\";\n\n\n\n\nexport class Photo extends React.Component {\n    render() {\n        return (\n            <Container>\n            <Row>\n              <Col xs={6} md={4}>\n                <Link to href=\"/volunteer\"><Image src={Hands}  />\n                <p className=\"centered\">Volunteer</p></Link>\n              </Col>\n              <Col xs={6} md={4}>\n                <Link to href=\"/volunteer\"><Image src={Tree} />\n                <p className=\"centered\">Land?</p></Link>\n\n              </Col>\n              <Col xs={6} md={4}>\n                <Link to href=\"/volunteer\"><Image src={Forest} />\n                <p className=\"centered\">Resources?</p></Link>\n              </Col>\n            </Row>\n          </Container>\n        )\n    }\n}\n\nexport default Photo\n","import React from \"react\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Image from \"react-bootstrap/Image\";\nimport Container from \"react-bootstrap/Container\";\nimport City from \"../../../images/City.jpeg\";\nimport Road from \"../../../images/Road.jpeg\";\n\nimport \"./Photo.css\";\n\nexport class InfoCard extends React.Component {\n  render() {\n    return (\n      <Container>\n        <Row>\n          <Col xs={6} md={6}>\n            <a href=\"/information\">\n              <Image src={City} />\n              <p className=\"centered\">About Us</p>\n            </a>\n          </Col>\n          <Col xs={6} md={6}>\n            <a href=\"/information\">\n              <Image src={Road} />\n              <p className=\"centered\">Reforestation</p>\n            </a>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default InfoCard;","  \nimport React from \"react\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Container from \"react-bootstrap/Container\";\n\nexport default function InfoBlock() {\n  return (\n    <Container>\n      <Row>\n        <Col md={12}>\n          <p>\n            rett og slett dummytekst fra og for trykkeindustrien. Lorem Ipsum\n            har vært bransjens standard for dummytekst helt siden 1500-ta llet,\n            da en ukjent boktrykker stokket en mengde bokstaver for å lage et\n            prøveeksemplar av en bok. Lorem Ipsum har tålt tidens ta nn\n            usedvanlig godt, og har i tillegg til å bestå gjennom fem århundrer\n            også tålt\n          </p>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n","  \nimport React from \"react\";\nimport Fbook from \"../../images/Fbook.svg\";\nimport Email from \"../../images/Email.svg\";\nimport \"./Footer.css\";\n\nexport default function Footer() {\n  return (\n    <>\n      <div className=\"footer\">\n        <a href=\"https://www.facebook.com/Appleseed-Initiative-101798068060276\">\n          <img src={Fbook} alt=\"facebook\" />\n        </a>\n        <a>\n          <img src={Email} alt=\"Email\" />\n        </a>\n      </div>\n    </>\n  );\n}\n","import React from \"react\";\nimport Dropdown from \"react-bootstrap/Dropdown\";\nimport Button from \"react-bootstrap/Button\";\nimport SplitButton from \"react-bootstrap/SplitButton\";\nimport \"./Header.css\";\nimport ButtonGroup from \"react-bootstrap/ButtonGroup\";\n\nexport default class Header extends React.Component {\n  render() {\n    return (\n      <>\n        <div className=\"header\">\n          <Dropdown as={ButtonGroup}>\n            <Button variant=\"success\">Get Involved</Button>\n\n            <Dropdown.Toggle\n              split\n              variant=\"success\"\n              id=\"dropdown-split-basic\"\n            />\n\n            <Dropdown.Menu>\n              <Dropdown.Item href=\"/getInvolved\">Volunteer</Dropdown.Item>\n              <Dropdown.Item href=\"#/action-2\">Seedlings</Dropdown.Item>\n              <Dropdown.Item href=\"#/action-3\">Landowner</Dropdown.Item>\n            </Dropdown.Menu>\n          </Dropdown>\n          <h1>ReforestNation</h1>\n          <Dropdown as={ButtonGroup}>\n            <Button variant=\"success\" href=\"/information\">Get Information</Button>\n            <Dropdown.Toggle\n              split\n              variant=\"success\"\n              id=\"dropdown-split-basic\"\n            />\n            <Dropdown.Menu>\n              <Dropdown.Item href=\"#/action-1\">About Us</Dropdown.Item>\n              <Dropdown.Item href=\"/reforestation\">Reforestation</Dropdown.Item>\n              <Dropdown.Item href=\"#/action-3\">Contact</Dropdown.Item>\n            </Dropdown.Menu>\n          </Dropdown>\n        </div>\n        <div className=\"right\">\n          <a href=\"/login\">\n            <button className=\"log\">Log In</button>\n          </a>\n        </div>\n      </>\n    );\n  }\n}","import React from \"react\";\nimport \"./Home.css\";\nimport Photo from \"./Cards/Photo\";\nimport InfoCard from \"./Cards/InfoCard\";\nimport InfoBlock from \"./Cards/InfoBlock/InfoBlock\";\nimport Footer from \"../../components/Footer/Footer\";\nimport Header from \"../Header/Header\";\n\nconst Home = () => {\n  return (\n    <>\n      <div className=\"style\">\n      <Header />\n        <div className=\"title\">\n          <h1>\n            Reforestation is one of the biggest and cheapest ways to help combat\n            global warming.\n          </h1>\n        </div>\n      </div>\n      <div className=\"middle\">\n        <h1>Want to Help?</h1>\n        <Photo />\n        <div className=\"volParagraph\">\n          <InfoBlock />\n        </div>\n      </div>\n      <div className=\"bottom\">\n        <h1>Why We Need Help</h1>\n        <InfoCard />\n      </div>\n      <Footer />\n    </>\n  );\n};\n\nexport default Home;","import React from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport Col from \"react-bootstrap/Col\";\nimport Container from \"react-bootstrap/Container\";\nimport Button from \"react-bootstrap/Button\";\nimport \"../style.css\";\n\nexport default class Volunteer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: \"\",\n      email: \"\",\n      phone: \"\",\n    };\n  }\n\n  onNameChange(event) {\n    this.setState({ name: event.target.value });\n  }\n\n  onEmailChange(event) {\n    this.setState({ email: event.target.value });\n  }\n\n  onPhoneChange(event) {\n    this.setState({ phone: event.target.value });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n\n    fetch(\"/api/persons\", {\n      method: \"POST\",\n      body: JSON.stringify(this.state),\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((response) => response.json())\n      .then((response) => {\n        if (response.status === \"success\") {\n          alert(\"Message Sent.\");\n          this.resetForm();\n        } else if (response.status === \"fail\") {\n          alert(\"Message failed to send.\");\n        }\n      })\n      .catch((err) => console.log(err.message));\n  }\n\n  render() {\n    return (\n      <Container className=\"volunteerForm\">\n        <Form onSubmit={this.handleSubmit.bind(this)}>\n          <Form.Row>\n            <Col>\n              <Form.Label>Full Name</Form.Label>\n              <Form.Control\n                placeholder=\"Enter full name\"\n                value={this.state.name}\n                onChange={this.onNameChange.bind(this)}\n              />\n            </Col>\n            <Col>\n              <Form.Label>Phone</Form.Label>\n              <Form.Control\n                placeholder=\"Enter phone number\"\n                value={this.state.phone}\n                onChange={this.onPhoneChange.bind(this)}\n              />\n            </Col>\n          </Form.Row>\n          <Form.Group controlId=\"formGroupEmail\">\n            <Form.Label>Email address</Form.Label>\n            <Form.Control\n              type=\"email\"\n              placeholder=\"Enter email\"\n              value={this.state.email}\n              onChange={this.onEmailChange.bind(this)}\n            />\n          </Form.Group>\n          <Form.Group\n            controlId=\"formDescription\"\n            style={{ height: 30, marginTop: 22 }}\n          >\n            <Button variant=\"primary\" className=\"btn float-right\" type=\"submit\">\n              Submit\n            </Button>\n          </Form.Group>\n        </Form>\n      </Container>\n    );\n  }\n}\n","var React = require('react');\r\n// var CanvasJS = require('./canvasjs');\r\nvar CanvasJS = /* CanvasJS.Chart ? CanvasJS : */ window.CanvasJS;\r\n\r\nclass CanvasJSChart extends React.Component {\r\n\tstatic _cjsContainerId = 0\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.options = props.options ? props.options : {};\r\n\t\tthis.containerProps = props.containerProps ? props.containerProps : {width: \"100%\", position: \"relative\"};\r\n\t\tthis.containerProps.height = props.containerProps && props.containerProps.height ? props.containerProps.height : this.options.height ? this.options.height + \"px\" : \"400px\";\r\n\t\tthis.chartContainerId = \"canvasjs-react-chart-container-\" + CanvasJSChart._cjsContainerId++;\r\n\t}\r\n\tcomponentDidMount() {\r\n\t\t//Create Chart and Render\r\n\t\tthis.chart = new CanvasJS.Chart(this.chartContainerId, this.options);\r\n\t\tthis.chart.render();\r\n\r\n\t\tif(this.props.onRef)\r\n\t\t\tthis.props.onRef(this.chart);\r\n\t}\r\n    shouldComponentUpdate(nextProps, nextState){\r\n\t\t//Check if Chart-options has changed and determine if component has to be updated\r\n        return !(nextProps.options === this.options);\r\n    }\r\n\tcomponentDidUpdate() {\r\n\t\t//Update Chart Options & Render\r\n\t\tthis.chart.options = this.props.options;\r\n\t\tthis.chart.render();\r\n\t}\r\n\tcomponentWillUnmount() {\r\n\t\t//Destroy chart and remove reference\r\n\t\tthis.chart.destroy && this.chart.destroy();\r\n\t\tif(this.props.onRef)\r\n\t\t\tthis.props.onRef(undefined);\r\n\t}\r\n\trender() {\r\n\t\t//return React.createElement('div', { id: this.chartContainerId, style: this.containerProps });\r\n\t\treturn <div id = {this.chartContainerId} style = {this.containerProps}/>\r\n\t}\r\n}\r\n\r\nvar CanvasJSReact = {\r\n    CanvasJSChart: CanvasJSChart,\r\n    CanvasJS: CanvasJS\r\n};\r\n\r\nexport default CanvasJSReact;\r\n","import React from 'react';\nimport CanvasJSReact from \"../../lib/canvasjs/canvasjs.react\";\nconst {CanvasJSChart} = CanvasJSReact;\n\nexport default class ResizeableCanvasJS extends React.Component {\n    static defaultProps = {\n        aspectRatio: 3/4\n    };\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            width: undefined,\n        };\n\n        this.containerRef = null;\n\n        this.resizeChart = this.resizeChart.bind(this);\n    }\n\n    resizeChart() {\n        if (!this.containerRef)\n            return;\n\n        const containerWidth = this.containerRef.offsetWidth;\n\n        this.setState({width: containerWidth});\n    }\n\n    componentDidMount() {\n        window.addEventListener(\"resize\", this.resizeChart);\n\n        // There are better ways to observe resizing of the chart container div,\n        // however that needs additional libraries and further testing.\n        // For now, the following \"hacky\" solution works.\n        setTimeout(() => this.resizeChart(), 100);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener(\"resize\", this.resizeChart);\n    }\n\n    render() {\n        const {containerProps, options, aspectRatio} = this.props;\n        const {width} = this.state;\n        const height = width ? width * aspectRatio : undefined;\n\n        return <div style={{height}} ref={r => this.containerRef = r}>\n            <CanvasJSChart {...{...this.props, containerProps: {...containerProps, width, height }, options: {...options, width, height }}} />\n        </div>;\n    }\n}\n","import React from 'react';\nimport './style.css';\nimport MapGeometry from './MapGeometry';\nimport {Modal} from 'react-bootstrap';\nimport data from './data';\nimport ResizeableCanvasJS from \"../../lib/canvasjs/ResizeableCanvasJS\";\n\nexport default class ReforestationMap extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            stateInformation: null\n        }\n    }\n\n    showStateInformation(stateId) {\n        const {title} = MapGeometry[stateId];\n        console.log( title + \" clicked\");\n        this.setState({stateInformation: {\n                stateId,\n                stateName: title,\n                ...(data[stateId])\n        }});\n    }\n\n    renderState(stateId, {path, title}) {\n        return <a className={\"stateMapRegion\"} key={stateId}>\n                <path onClick={() => this.showStateInformation(stateId)}\n                      d={path}\n                      fill=\"none\" stroke=\"none\"\n                      title={title}\n                      alt={title}\n                      id={stateId}\n                >\n                    <title>{title}</title>\n                </path>\n        </a>;\n\n    }\n\n    dataSeriesToCanvasJSColumn(name, data) {\n        return {\n            type: \"column\",\n            name: name,\n            showInLegend: false,\n            dataPoints: data.map(({year, value}) => ({ label: year, y: value })),\n            indexLabelFontColor: \"#5A5757\",\n            indexLabelPlacement: \"outside\",\n        };\n    }\n\n    renderChart(dataSeries) {\n        if (dataSeries.length < 1) {\n            return <em>No data is available for this region yet.</em>\n        }\n\n        return <ResizeableCanvasJS options={{\n            toolTip: {\n                content: \"{label} {name}: {y}\"\n            },\n            data: dataSeries.map(({name, data}) => this.dataSeriesToCanvasJSColumn(name, data))\n        }}\n        />\n    }\n\n    renderStateInformationModal() {\n        const {stateInformation} = this.state;\n        if (!stateInformation)\n            return null;\n\n        const {stateName, treeCoverLoss, co2Emissions, biomassLoss} = stateInformation;\n\n        const dataSeries = [\n            { name: \"Tree Cover Loss\", data: treeCoverLoss },\n            { name: \"CO2 Emissions\", data: co2Emissions },\n            { name: \"Biomass Loss\", data: biomassLoss },\n        ];\n\n        const availableDataSeries = dataSeries.filter(d => d.data);\n\n        return <Modal show={true} onHide={() => this.setState({stateInformation: null})}>\n            <Modal.Header closeButton>\n                <Modal.Title>Statistics for {stateName}</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                {this.renderChart(availableDataSeries)}\n            </Modal.Body>\n        </Modal>\n    }\n\n    render() {\n        return <>\n            <h1>U.S. Reforestation Map and Statistics</h1>\n\n            <div className=\"pageContent\">\n                <div className=\"mapdiv\">\n                    <svg version=\"1.2\" viewBox=\"0 0 1100 1000\" xmlns=\"http://www.w3.org/2000/svg\">\n                        {Object.keys(MapGeometry).map(stateId => this.renderState(stateId, MapGeometry[stateId]))}\n                    </svg>\n                </div>\n            </div>\n\n            { this.renderStateInformationModal() }\n        </>;\n    }\n}\n","import React from 'react'\n\nexport default function InformationView() {\n    return (\n        <div>\n            <h1>ReforestNation</h1>\n        </div>\n    )\n}\n","import React from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport Button from \"react-bootstrap/Button\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport \"../style.css\";\n\n\nconst UserEventCard = ({ event }) => {\n\n\n  const {\n    site,\n    date,\n    startTime,\n    endTime,\n    coordinator,\n    description,\n    volunteers\n  } = event;\n\n  return (\n    <Card className=\"dashboardCard\">\n      <Card.Body>\n        <Row>\n          <Col>\n            <Card.Title><h3>{site && site.name}</h3></Card.Title>\n          </Col>\n          <Col>\n            <Button className=\"btn align-right\" variant=\"dark\">View Event</Button>\n          </Col>\n        </Row>\n        <Card.Subtitle className=\"mb-2 text-muted\">{date}</Card.Subtitle>\n        <Card.Subtitle className=\"mb-2 text-muted\">{startTime}-{endTime}</Card.Subtitle>\n        <Card.Subtitle className=\"mb-2 text-muted\">Coordinator: {coordinator && coordinator.name}</Card.Subtitle>\n        <Card.Text>{description}</Card.Text>\n      </Card.Body>\n    </Card>\n  )\n}\n\nexport default UserEventCard;","import React from \"react\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport UserEventCard from \"../UserEvents/UserEventCard\";\n\n\n\nfunction EventDisplay( {events} ) {\n\n  return (\n\n    <>\n    <Row>\n      {events.map((event, index) => (\n        <Col sm={12} key={index}>\n          <UserEventCard event={event} />\n        </Col>\n      ))}\n    </Row>\n    </>\n  )\n}\n\nexport default EventDisplay;","import React, { useState, useEffect } from \"react\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Container from \"react-bootstrap/Container\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport EventDisplay from \"../GetInvolved/UserEvents/UserEventDisplay\";\nimport API from \"../../utils/API\";\nimport Header from \"../Header/Header\";\n\nconst GetInvolved = ({ events }) => {\n  const [eventState, setEventState] = useState({\n    events: [],\n  });\n\n  useEffect(() => {\n    async function fetchData() {\n      await API.getEvents().then((res) =>\n        setEventState({ ...eventState, events: res.data })\n      );\n    }\n    fetchData();\n  }, []);\n\n  return (\n    <>\n    <Header />\n      <Router>\n        <Container fluid>\n          <Row>\n            \n            <Col className=\"dashboardContentView\">\n              <EventDisplay events={eventState.events} />\n            </Col>\n          </Row>\n        </Container>\n      </Router>\n    </>\n  );\n};\n\nexport default GetInvolved;\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Navbar from \"./components/Navbar/Navbar\";\nimport Dashboard from \"./components/Dashboard/Dashboard\";\nimport Home from \"./components/Home/Home\";\nimport Volunteer from './components/GetInvolved/VolunteerForm/volunteer';\nimport ReforestationMap from \"./components/Reforestation/ReforestationMap\";\nimport InformationView from \"./components/Information/InformationView\";\nimport GetInvolved from \"./components/GetInvolved/GetInvolved\";\nimport Login from \"./components/authComponents/Login/Login\";\n\nfunction App() {\n  return (\n    <>\n    <Router>\n        <>\n          <Switch>\n          <Route exact path=\"/\" component={ Home } />\n            <Route path=\"/dashboard\" component={Dashboard}/>\n            <Route exact path=\"/login\" component={Login}/>\n            <Route path=\"/volunteer\" component={Volunteer}/>\n            <Route path=\"/getInvolved\" component={GetInvolved}/>            \n            <Route path=\"/reforestation\" component={ReforestationMap} />\n            <Route path=\"/information\" component={InformationView}/>\n          </Switch>\n        </>\n    </Router>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}